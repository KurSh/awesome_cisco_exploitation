-- $Id: RSVP-MIB.my,v 3.1.2.2 1996/05/07 23:10:04 thille Exp $
-- $Source: /release/112/cvs/Xsys/MIBS/RSVP-MIB.my,v $
-- *****************************************************************
-- RSVP and Integrated Services MIBs
--
-- March 1996, Fred Baker
--
-- Copyright (c) 1996 by cisco Systems, Inc.
-- All rights reserved.
-- *****************************************************************
-- $Log: RSVP-MIB.my,v $
-- Revision 3.1.2.2  1996/05/07  23:10:04  thille
-- CSCdi56993:  Some new mibs have extraneous import statements
-- Branch: California_branch
-- Remove extraneous imports.
--
-- Revision 3.1.2.1  1996/04/18  08:00:08  fred
-- CSCdi55001:  initial version of MIB; this will change
-- Branch: California_branch
--
-- Revision 3.1  1996/04/18  00:25:25  fred
-- Placeholder for RSVP MIBs
--
-- *****************************************************************
-- $Endlog$
--
-- This mib was extracted from internet drafts for integrated services
-- and RSVP

--%DNP%  FYI:  Lines containing a comment starting with the "Do Not
--%DNP%  Publish" prefix "%DNP%" (such as these) are automagicially
--%DNP%  stripped from MIBS prior to publishing on ftp and cio, and
--%DNP%  should be used for comments intended for cisco engineering
--%DNP%  eyes only, or for new product identifiers that are not yet
--%DNP%  announced.

RSVP-MIB DEFINITIONS ::= BEGIN

        IMPORTS
                MODULE-IDENTITY, OBJECT-TYPE, Gauge32,
                NOTIFICATION-TYPE, Integer32, IpAddress,
                experimental                         FROM SNMPv2-SMI
                TEXTUAL-CONVENTION, TruthValue, RowStatus,
                TimeStamp                            FROM SNMPv2-TC
                MODULE-COMPLIANCE, OBJECT-GROUP      FROM SNMPv2-CONF
                BitRate, BurstSize                   FROM INT-SERV-MIB
                ifIndex                              FROM IF-MIB;

--  This MIB module uses the extended OBJECT-TYPE macro as
--  defined in [9].



    rsvp MODULE-IDENTITY
            LAST-UPDATED "9511030500Z" -- Tue Mar 12 23:53:08 PST 1996
            ORGANIZATION "IETF RSVP Working Group"
            CONTACT-INFO
           "       Fred Baker
           Postal: Cisco Systems
                   519 Lado Drive
                   Santa Barbara, California 93111
           Tel:    +1 805 681 0115
           E-Mail: fred@cisco.com

                   John Krawczyk
           Postal: Bay Networks, Inc
                   2 Federal Street
                   Billerica, Massachusetts 01821
           Tel:    +1 508 436 3811
           E-Mail: jj@BayNetworks.com"
       DESCRIPTION
          "The MIB module to describe  the  RSVP  and  In-
          tegrated Services Protocol"
      ::= { experimental 71 }

  rsvpObjects         OBJECT IDENTIFIER ::= { rsvp 1 }
  rsvpNotifications   OBJECT IDENTIFIER ::= { rsvp 2 }
  rsvpConformance     OBJECT IDENTIFIER ::= { rsvp 3 }



    SessionIndex ::= TEXTUAL-CONVENTION
        STATUS   current
        DESCRIPTION
           "The Session Index  is  used  in  certain  RSVP
           tables  to  identify  the  session, filter, and
           next hop object contents that in turn  identify
           the  PATH, RESV, or flow state being described.
           Zero values are used to  mean  'any  value'  or
           'not  checked' according to the RSVP protocol's
           conventions.

           The object is in fact a  succession  of  values
           taken  from  the  session, filter, and next hop
           objects, and the lengths of  these  fields  are
           defined by the type value of those objects. The
           octets are, in order:

                type value used in these fields (one octet)
                destination/session address from session object
                source address from filter or template object
                ip protocol
                multiplexor used by ip protocol
                        (UDP destination and source ports, SPI, etc)
                previous/next hop address from hop object

           This is  an  unusual  way  to  define  instance
           values,  but  is  necessitated by the fact that
           RSVP must display with a common MIB  objects  o
           dissimilar protocols."
       SYNTAX   OCTET STRING (SIZE(1..100))

    Protocol ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The value of the IP Protocol field  of  an  IP
           Datagram  Header.  This identifies the protocol
           layer above IP.  For example, the  value  6  is
           used  for TCP and the value 17 is used for UDP.
           The values of this field are defined in the As-
           signed Numbers RFC."
       SYNTAX   INTEGER (1..255)

    Port ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The value of the UDP or TCP Source or Destina-
           tion  Port field.  This pair, when coupled with
           the IP Addresses of the source and  destination
           system  and  the  IP  protocol  field, uniquely
           identifies a data stream.

           Zero is used as a fill value when the  protocol
           indicated  by  IP  Protocol  does not have port
           numbers in the  place  that  UDP  and  TCP  put
           them."
       SYNTAX   INTEGER (0..'FFFF'h)

    RsvpEncapsulation ::= TEXTUAL-CONVENTION
         STATUS   current
         DESCRIPTION
           "This indicates the encapsulation that an  RSVP
           Neighbor is perceived to be using."
        SYNTAX   INTEGER {
                   ip (1),   -- IP Protocol 46
                   udp (2),  -- UDP Encapsulation
                   both (3)  -- neighbor is using both encapsulations
                 }

    RefreshInterval ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "d"
         STATUS   current
         DESCRIPTION
           "The number of milliseconds that  are  expected
           to elapse between refreshes of path or reserva-
           tion state.  Unrefreshed  Path  or  reservation
           state is removed after a small multiple of this
           period."
        SYNTAX   INTEGER (0..'7FFFFFFF'h)

    QosService ::= TEXTUAL-CONVENTION
         STATUS   current
         DESCRIPTION
           "The class of service in use by a flow."
        SYNTAX   INTEGER {
                   bestEffort (1),         -- no QoS Services Requested
                   guaranteedDelay (2),    -- Guaranteed Delay
                   controlledLoad (5)      -- Controlled Load
                 }

    DelayClass ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "d"
         STATUS   current
         DESCRIPTION
           "The class of delay used by the Controlled  De-
           lay Service."
        SYNTAX   INTEGER (1..3)

    IpAddressString ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "3d.3d.3d.3d " -- repeat for each IP address
         STATUS   current
         DESCRIPTION
           "A list of IP Addresses as found  in  the  RSVP
           Scope Object."
        SYNTAX   OCTET STRING (SIZE(0..65536))

    MessageSize ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The size of a message in bytes. This  is  used
           to  specify  the  minimum and maximum size of a
           message along an integrated services route."
       SYNTAX   INTEGER (0..'7FFFFFFF'h)

--      The RSVP Session Statistics Database displays statistics
--      relating to the number of senders and receivers in each
--      session.

    rsvpSessionTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpSessionEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Statistics concerning the sessions seen  by  a
           given system."
       ::= { rsvpObjects 7 }

    rsvpSessionEntry OBJECT-TYPE
        SYNTAX      RsvpSessionEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Statistics concerning a  single  RSVP  session
           seen by a given system."
       INDEX { rsvpSessionAddress, rsvpSessionProtocol, rsvpSessionPort }
       ::= { rsvpSessionTable 1 }

    RsvpSessionEntry ::=
        SEQUENCE {
        rsvpSessionAddress          IpAddress,
        rsvpSessionProtocol         Protocol,
        rsvpSessionPort             Port,
        rsvpSessionSenders          Gauge32,
        rsvpSessionReceivers        Gauge32,
        rsvpSessionRequests         Gauge32
        }

    rsvpSessionAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this session."
       ::= { rsvpSessionEntry 1 }

    rsvpSessionProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Protocol used by a session."
       ::= { rsvpSessionEntry 2 }

    rsvpSessionPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The UDP or TCP port number used as a  destina-
           tion  port  for  all senders in this session. A
           value of zero indicates that the IP protocol in
           use, specified by rsvpSessionProtocol, does not
           have ports."
       ::= { rsvpSessionEntry 3 }

    rsvpSessionSenders OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of senders currently  known  to  be
           part of this session."
       ::= { rsvpSessionEntry 4 }

    rsvpSessionReceivers OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of reservations being requested  of
           this system for this session."
       ::= { rsvpSessionEntry 5 }

    rsvpSessionRequests OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of reservation requests this system
           is sending upstream for this session."
       ::= { rsvpSessionEntry 6 }

-- Note that this is a read only table. If the corresponding
-- rsvpSenderTable, rsvpResvTable, and rsvpReqTable entries all
-- are removed, this entry goes away also.

--      The RSVP Session Sender Database contains the information
--      displayed by senders regarding their potential contribution
--      to session data content. It is in essence a list of the
--      valid PATH messages that the RSVP Router or Host is receiving.

    rsvpSenderTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpSenderEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by senders in PATH messages."
       ::= { rsvpObjects 1 }

    rsvpSenderEntry OBJECT-TYPE
        SYNTAX      RsvpSenderEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by a single sender's PATH message."
       INDEX { rsvpSenderSessionIndex, ifIndex }
       ::= { rsvpSenderTable 1 }

RsvpSenderEntry ::=
    SEQUENCE {
        rsvpSenderSessionIndex          SessionIndex,
        rsvpSenderTSpecRate             BitRate,
        rsvpSenderTSpecPeakRate         BitRate,
        rsvpSenderTSpecBurst            BurstSize,
        rsvpSenderTSpecMinTU            MessageSize,
        rsvpSenderTSpecMaxTU            MessageSize,
        rsvpSenderInterval              RefreshInterval,
        rsvpSenderRSVPHop               TruthValue,
        -- place holder for Policy information
        -- place holder for OPWA Advertisement
        rsvpSenderLastChange            TimeStamp,
        rsvpSenderStatus                RowStatus
    }

    rsvpSenderSessionIndex OBJECT-TYPE
        SYNTAX      SessionIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The information from  the  session,  template,
           and  previous  hop  objects  required to select
           PATH state for a single session  and  a  single
           sender through a single interface."
       ::= { rsvpSenderEntry 1 }

    rsvpSenderTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpSenderTSpecPeakRate  (if  supported  by the
           service model); however, averaged across two or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpSenderTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpSenderEntry 2 }

    rsvpSenderTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpSenderEntry 3 }

    rsvpSenderTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time."
       ::= { rsvpSenderEntry 4 }

    rsvpSenderTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpSenderEntry 5 }

    rsvpSenderTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpSenderEntry 6 }

    rsvpSenderInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The interval between PATH receipt  of  refresh
           messages as advertised by the Previous Hop."
       ::= { rsvpSenderEntry 7 }

    rsvpSenderRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that  the  previous
           hop  is  an  RSVP  hop.  If FALSE, the node be-
           lieves that the previous hop may not be an RSVP
           hop."
       ::= { rsvpSenderEntry 8 }

    rsvpSenderLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in this PATH  mes-
           sage; This includes the first time it was sent,
           or time of the most recent  change  in  parame-
           ters."
       ::= { rsvpSenderEntry 9 }

    rsvpSenderStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all active  PATH  messages.   This
           object  may  be used to install static PATH in-
           formation or delete PATH information."
       ::= { rsvpSenderEntry 10 }

--      The RSVP Reservation Requests Received Table contains the
--      information displayed by receivers regarding their needs with
--      respect to sessions and senders. It is in essence a list of the
--      valid RESV messages that the RSVP Router or Host is receiving.

    rsvpResvTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpResvEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by receivers in RESV messages."
       ::= { rsvpObjects 2 }

    rsvpResvEntry OBJECT-TYPE
        SYNTAX      RsvpResvEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed  by  a single receiver's RESV message
           concerning a single sender."
       INDEX { rsvpResvSessionIndex, ifIndex }
       ::= { rsvpResvTable 1 }

    RsvpResvEntry ::=
        SEQUENCE {
            rsvpResvSessionIndex    SessionIndex,
            rsvpResvService         QosService,
            rsvpResvTSpecRate       BitRate,
            rsvpResvTSpecPeakRate   BitRate,
            rsvpResvTSpecBurst      BurstSize,
            rsvpResvTSpecLevel      DelayClass,
            rsvpResvTSpecMinTU      MessageSize,
            rsvpResvTSpecMaxTU      MessageSize,
            rsvpResvInterval        RefreshInterval,
            rsvpResvScope           IpAddressString,
            rsvpResvShared          TruthValue,
            rsvpResvExplicit        TruthValue,
            rsvpResvRSVPHop         TruthValue,
            -- place holder for Policy information
            rsvpResvLastChange      TimeStamp,
            rsvpResvStatus          RowStatus
        }

    rsvpResvSessionIndex OBJECT-TYPE
        SYNTAX      SessionIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The information from the session, filter,  and
           next  hop objects required to select RESV state
           for a single request for a single session and a
           single sender through a single interface."
       ::= { rsvpResvEntry 1 }

    rsvpResvService OBJECT-TYPE
        SYNTAX      QosService
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The QoS Service  classification  requested  by
           the receiver."
       ::= { rsvpResvEntry 8 }

    rsvpResvTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpResvTSpecPeakRate (if supported by the ser-
           vice model); however, averaged  across  two  or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpResvTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpResvEntry 9 }

    rsvpResvTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpResvEntry 10 }

    rsvpResvTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpResvEntry 11 }

    rsvpResvTSpecLevel OBJECT-TYPE
        SYNTAX      DelayClass
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If the service is  predictive  or  controlled-
           delay,  this is the service level that is being
           requested.  Otherwise, it is zero, or the agent
           may return noSuchValue."
       ::= { rsvpResvEntry 12 }

    rsvpResvTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpResvEntry 13 }

    rsvpResvTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpResvEntry 14 }

    rsvpResvInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The interval between RESV receipt  of  refresh
           messages as advertised by the Next Hop."
       ::= { rsvpResvEntry 15 }

    rsvpResvScope OBJECT-TYPE
        SYNTAX      IpAddressString
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "A list of zero or more  Sender  IP  Addresses,
           indicating  to  which  senders a Wildcard Style
           Filter applies."
       ::= { rsvpResvEntry 16 }

    rsvpResvShared OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, a reservation shared among senders is
           requested.  If FALSE, a reservation specific to
           this sender is requested."
       ::= { rsvpResvEntry 17 }

    rsvpResvExplicit OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, individual senders are  listed  using
           Filter  Specifications.   If FALSE, senders are
           listed in the Scope Object."
       ::= { rsvpResvEntry 18 }

    rsvpResvRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that the  next  hop
           is  an  RSVP  hop.  If FALSE, the node believes
           that the next hop may not be an RSVP hop."
       ::= { rsvpResvEntry 19 }

    rsvpResvLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in  this  reserva-
           tion  request;  This includes the first time it
           was received, or time of the most recent change
           in parameters."
       ::= { rsvpResvEntry 20 }

    rsvpResvStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all active  RESV  messages.   This
           object  may  be used to install static RESV in-
           formation or delete RESV information."
       ::= { rsvpResvEntry 21 }

--      The RSVP Reservation Requests Forwarded Table contains the
--      information displayed by receivers regarding their needs with
--      respect to sessions and senders. It is in essence a list of the
--      valid RESV messages that the RSVP Router or Host is sending
--      to its upstream neighbors.

    rsvpResvFwdTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpResvFwdEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed upstream in RESV messages."
       ::= { rsvpObjects 3 }

    rsvpResvFwdEntry OBJECT-TYPE
        SYNTAX      RsvpResvFwdEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed  upstream in an RESV message concern-
           ing a single sender."
       INDEX { rsvpResvFwdSessionIndex, ifIndex }
       ::= { rsvpResvFwdTable 1 }

    RsvpResvFwdEntry ::=
        SEQUENCE {
            rsvpResvFwdSessionIndex         SessionIndex,
            rsvpResvFwdService              QosService,
            rsvpResvFwdTSpecRate            BitRate,
            rsvpResvFwdTSpecPeakRate        BitRate,
            rsvpResvFwdTSpecBurst           BurstSize,
            rsvpResvFwdTSpecLevel           DelayClass,
            rsvpResvFwdTSpecMinTU           MessageSize,
            rsvpResvFwdTSpecMaxTU           MessageSize,
            rsvpResvFwdInterval             RefreshInterval,
            rsvpResvFwdScope                IpAddressString,
            rsvpResvFwdShared               TruthValue,
            rsvpResvFwdExplicit             TruthValue,
            rsvpResvFwdRSVPHop              TruthValue,
            -- place holder for Policy information
            rsvpResvFwdLastChange           TimeStamp,
            rsvpResvFwdStatus               RowStatus
        }

    rsvpResvFwdSessionIndex OBJECT-TYPE
        SYNTAX      SessionIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The information from  the  session,  template,
           and  next  hop  objects required to select RESV
           state being advertised for a single session and
           a  single sender through a single interface. By
           implication, the next hop address  is  the  ad-
           dress used by the system on the interface."
       ::= { rsvpResvFwdEntry 1 }

    rsvpResvFwdService OBJECT-TYPE
        SYNTAX      QosService
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The QoS Service classification requested."
       ::= { rsvpResvFwdEntry 6 }

    rsvpResvFwdTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpResvFwdTSpecPeakRate  (if  supported by the
           service model); however, averaged across two or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpResvFwdTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpResvFwdEntry 7 }

    rsvpResvFwdTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpResvFwdEntry 8 }

    rsvpResvFwdTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpResvFwdEntry 9 }

    rsvpResvFwdTSpecLevel OBJECT-TYPE
        SYNTAX      DelayClass
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If the service is  predictive  or  controlled-
           delay,  this is the service level that is being
           requested.  Otherwise, it is zero, or the agent
           may return noSuchValue."
       ::= { rsvpResvFwdEntry 10 }

    rsvpResvFwdTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpResvFwdEntry 11 }



    rsvpResvFwdTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpResvFwdEntry 12 }

    rsvpResvFwdInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The interval between RESV receipt  of  refresh
           messages advertised to the Previous Hop."
       ::= { rsvpResvFwdEntry 13 }

    rsvpResvFwdScope OBJECT-TYPE
        SYNTAX      IpAddressString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "A list of zero or more  Sender  IP  Addresses,
           indicating  to  which  senders  a  non-explicit
           reservation applies."
       ::= { rsvpResvFwdEntry 14 }

    rsvpResvFwdShared OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, a reservation shared among senders is
           requested.  If FALSE, a reservation specific to
           this sender is requested."
       ::= { rsvpResvFwdEntry 15 }

    rsvpResvFwdExplicit OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, individual senders are  listed  using
           Filter  Specifications.   If FALSE, senders are
           listed in the Scope Object."
       ::= { rsvpResvFwdEntry 16 }

    rsvpResvFwdRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that  the  previous
           hop  is  an  RSVP  hop.  If FALSE, the node be-
           lieves that the previous hop may not be an RSVP
           hop."
       ::= { rsvpResvFwdEntry 17 }

    rsvpResvFwdLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in  this  request;
           This  includes the first time it was requested,
           or time of the most recent change in parameters
           requested."
       ::= { rsvpResvFwdEntry 18 }

    rsvpResvFwdStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
           "'valid' for all active  RESV  messages.   This
           object  may  be used to install static RESV in-
           formation or delete RESV information."
       ::= { rsvpResvFwdEntry 19 }

--      The RSVP Active Flows Database
--      lists all flows active on an outgoing interface, including
--      relevant attributes.

    rsvpFlowTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpFlowEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the reserved flows  us-
           ing the system's interfaces."
       ::= { rsvpObjects 6 }

    rsvpFlowEntry OBJECT-TYPE
        SYNTAX      RsvpFlowEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the use of a given  in-
           terface by a given flow."
       INDEX { rsvpFlowIndex, ifIndex }
       ::= { rsvpFlowTable 1 }

    RsvpFlowEntry ::=
        SEQUENCE {
            rsvpFlowIndex                   SessionIndex,
            rsvpFlowRate                    BitRate,
            rsvpFlowBurst                   BurstSize,
            rsvpFlowWeight                  Integer32,
            rsvpFlowQueue                   Integer32,
            rsvpFlowMinTU                   MessageSize,
            rsvpFlowStatus                  RowStatus
        }

    rsvpFlowIndex OBJECT-TYPE
        SYNTAX      SessionIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The information in the classifier  correspond-
           ing to the path state for a flow installed on a
           single interface.  Previous Hop address implied
           by  this  is the address the system puts in its
           own previous/next hop objects."
       ::= { rsvpFlowEntry 1 }

    rsvpFlowRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream,  in  Kilobits.   The  rate may be arbi-
           trarily fast during a short  interval  such  as
           the  duration  of a video frame.  However, over
           any two such intervals it will not average fas-
           ter than the average rate as transmitted by the
           sender."
       ::= { rsvpFlowEntry 2 }

    rsvpFlowBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpFlowEntry 3 }

    rsvpFlowWeight OBJECT-TYPE
        SYNTAX      Integer32
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The weight used  to  prioritize  the  traffic.
           Note  that the interpretation of this object is
           implementation-specific,   as   implementations
           vary in their use of weighting procedures."
       ::= { rsvpFlowEntry 4 }

    rsvpFlowQueue OBJECT-TYPE
        SYNTAX      Integer32
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The number of the queue used by this  traffic.
           Note  that the interpretation of this object is
           implementation-specific,   as   implementations
           vary in their use of queue identifiers."
       ::= { rsvpFlowEntry 5 }

    rsvpFlowMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpFlowEntry 6 }

    rsvpFlowStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all active flows.  This object may
           be  used  to install static classifier informa-
           tion, delete classifier information, or author-
           ize such."
       ::= { rsvpFlowEntry 7 }

--      The RSVP Interface Attributes Database contains the
--      RSVP-specific information for an interface. Information
--      that is shared with other reservation procedures such
--      as ST-II is in the Integrated Interface Attributes
--      Database.

    rsvpIfAttribTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpIfAttribEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The RSVP-specific attributes of  the  system's
           interfaces."
       ::= { rsvpObjects 4 }

    rsvpIfAttribEntry OBJECT-TYPE
        SYNTAX      RsvpIfAttribEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The RSVP-specific attributes of  the  a  given
           interface."
       INDEX { ifIndex }
       ::= { rsvpIfAttribTable 1 }

RsvpIfAttribEntry ::=
    SEQUENCE {
    rsvpIfAttribUdpNbrs         Gauge32,
    rsvpIfAttribIpNbrs          Gauge32,
    rsvpIfAttribNbrs            Gauge32,
    rsvpIfAttribEnabled         TruthValue,
    rsvpIfAttribUdpRequired     TruthValue,
    rsvpIfAttribStatus          RowStatus
    }

    rsvpIfAttribUdpNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors perceived to be  using
           only the RSVP UDP Encapsulation."
       ::= { rsvpIfAttribEntry 1 }

    rsvpIfAttribIpNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors perceived to be  using
           only the RSVP IP Encapsulation."
       ::= { rsvpIfAttribEntry 2 }

    rsvpIfAttribNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors  currently  perceived;
           this will exceed rsvpIfAttribIpNbrs + rsvpIfAt-
           tribUdpNbrs by the number  of  neighbors  using
           both encapsulations."
       ::= { rsvpIfAttribEntry 3 }

    rsvpIfAttribEnabled OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, RSVP is enabled  on  this  Interface.
           If  FALSE,  RSVP  is not enabled on this inter-
           face."
       ::= { rsvpIfAttribEntry 4 }

    rsvpIfAttribUdpRequired OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, manual configuration forces  the  use
           of  UDP  encapsulation  on  the  interface.  If
           FALSE, UDP encapsulation is only used if rsvpI-
           fAttribUdpNbrs is not zero."
       ::= { rsvpIfAttribEntry 5 }

    rsvpIfAttribStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' on interfaces that are configured  for
           RSVP."
       ::= { rsvpIfAttribEntry 6 }

--      The RSVP Neighbor Database lists the neighbors the RSVP
--      process currently is receiving messages from.

    rsvpNbrTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpNbrEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing  the  Neighbors  of  an
           RSVP system."
       ::= { rsvpObjects 5 }

    rsvpNbrEntry OBJECT-TYPE
        SYNTAX      RsvpNbrEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing a  single  RSVP  Neigh-
           bor."
       INDEX { ifIndex, rsvpNbrAddress }
       ::= { rsvpNbrTable 1 }

RsvpNbrEntry ::=
    SEQUENCE {
    rsvpNbrAddress      OCTET STRING,
    rsvpNbrProtocol     RsvpEncapsulation,
    rsvpNbrStatus       RowStatus
    }

    rsvpNbrAddress OBJECT-TYPE
        SYNTAX      OCTET STRING (SIZE(4..16))
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP4 or IP6 Address used by this neighbor."
       ::= { rsvpNbrEntry 1 }



    rsvpNbrProtocol OBJECT-TYPE
        SYNTAX      RsvpEncapsulation
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The encapsulation being used  by  this  neigh-
           bor."
       ::= { rsvpNbrEntry 2 }

    rsvpNbrStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all neighbors.  This object may be
           used  to  configure neighbors.  In the presence
           of configured neighbors, the implementation may
           (but is not required to) limit the set of valid
           neighbors to those configured."
       ::= { rsvpNbrEntry 3 }

--
--      Notifications used to signal events
--

    newFlow NOTIFICATION-TYPE
        OBJECTS { rsvpFlowIndex, ifIndex }
        STATUS  current
        DESCRIPTION
           "The newFlow trap indicates that the  originat-
           ing  system  has  installed  a  new flow in its
           classifier, or (when reservation  authorization
           is  in view) is prepared to install such a flow
           in the classifier and is requesting  authoriza-
           tion.   The objects included with the Notifica-
           tion may be used to  read  further  information
           using  the  RSVP  MIB.   Authorization  or non-
           authorization may be enacted by a write to  the
           variable rsvpFlowStatus"
       ::= { rsvpNotifications 1 }

    lostFlow NOTIFICATION-TYPE
        OBJECTS { rsvpFlowIndex, ifIndex }
        STATUS  current
        DESCRIPTION
           "The lostFlow trap indicates that the originat-
           ing  system  has removed a flow in its classif-
           ier."
       ::= { rsvpNotifications 2 }

-- conformance information

rsvpGroups      OBJECT IDENTIFIER ::= { rsvpConformance 1 }
rsvpCompliances OBJECT IDENTIFIER ::= { rsvpConformance 2 }

-- compliance statements

    rsvpCompliance MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
           "The compliance statement.  Note that  the  im-
           plementation  of this module requires implemen-
           tation of the Integrated Services MIB as well."
       MODULE  -- this module
       MANDATORY-GROUPS {
           rsvpSessionGroup, rsvpSenderGroup, rsvpResvGroup,
           rsvpResvFwdGroup, rsvpFlowGroup, rsvpIfAttribGroup,
           rsvpNbrGroup
           }
       ::= { rsvpCompliances 1 }

    rsvpSessionGroup OBJECT-GROUP
         OBJECTS {
            rsvpSessionSenders,
            rsvpSessionReceivers,
            rsvpSessionRequests
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 1 }

    rsvpSenderGroup OBJECT-GROUP
         OBJECTS {
            rsvpSenderTSpecRate, rsvpSenderTSpecPeakRate,
            rsvpSenderTSpecBurst, rsvpSenderTSpecMinTU, rsvpSenderTSpecMaxTU,
            rsvpSenderInterval, rsvpSenderLastChange, rsvpSenderStatus,
            rsvpSenderRSVPHop
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 2 }

    rsvpResvGroup OBJECT-GROUP
         OBJECTS {
            rsvpResvService, rsvpResvTSpecRate, rsvpResvTSpecBurst,
            rsvpResvTSpecPeakRate, rsvpResvTSpecMinTU, rsvpResvTSpecMaxTU,
            rsvpResvTSpecLevel, rsvpResvInterval, rsvpResvScope,
            rsvpResvShared, rsvpResvExplicit, rsvpResvRSVPHop,
            rsvpResvLastChange, rsvpResvStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 3 }

    rsvpResvFwdGroup OBJECT-GROUP
         OBJECTS {
            rsvpResvFwdService, rsvpResvFwdTSpecPeakRate,
            rsvpResvFwdTSpecMinTU,  rsvpResvFwdTSpecMaxTU,
            rsvpResvFwdTSpecRate, rsvpResvFwdTSpecBurst,
            rsvpResvFwdTSpecLevel, rsvpResvFwdInterval, rsvpResvFwdScope,
            rsvpResvFwdShared, rsvpResvFwdExplicit, rsvpResvFwdRSVPHop,
            rsvpResvFwdLastChange, rsvpResvFwdStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 4 }

    rsvpFlowGroup OBJECT-GROUP
         OBJECTS {
            rsvpFlowRate, rsvpFlowBurst, rsvpFlowWeight,
            rsvpFlowQueue, rsvpFlowMinTU, rsvpFlowStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 5 }

    rsvpIfAttribGroup OBJECT-GROUP
         OBJECTS {
            rsvpIfAttribUdpNbrs, rsvpIfAttribIpNbrs,
            rsvpIfAttribNbrs, rsvpIfAttribEnabled,
            rsvpIfAttribUdpRequired, rsvpIfAttribStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 6 }

    rsvpNbrGroup OBJECT-GROUP
         OBJECTS {
            rsvpNbrProtocol, rsvpNbrStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 7 }

END
