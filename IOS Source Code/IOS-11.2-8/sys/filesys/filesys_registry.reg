# $Id: filesys_registry.reg,v 3.2 1995/11/17 09:07:31 hampton Exp $
#------------------------------------------------------------------
# filesys_registry.reg - Service Points for File System
#
# Jack Jenney, June 1995
#
# Copyright (c) 1995, 1997 by cisco Systems, Inc.
# All rights reserved.
#
#------------------------------------------------------------------
# $Log: filesys_registry.reg,v $
# Revision 3.2  1995/11/17  09:07:31  hampton
# Remove old entries from the RCS header logs.
#
# Revision 3.1  1995/11/09  11:31:39  shaker
# Bump version numbers from 2.x to 3.x.
#
# Revision 2.2  1995/11/08  20:57:00  shaker
# Merge Arkansas_branch into 11.1 mainline.
#
# Revision 2.1  1995/08/23  17:04:30  yanke
# Placeholders
#
# CSCdi39151:  modulized local/remote file systems
#
#
#------------------------------------------------------------------
# $Endlog$
#
# Syntax for defining a registry
#
# Each item must begin a line of its own.
# Lines may be continued by ending with a \
#
# BEGIN REGISTRY <name of registry>
#
# DEFINE <name of service point>
# /* <comment lines in standard C format describing the
#     registry. These will be reformatted unless they are
#     in the comment bar format> */
# DATA
#    <Lines of text to be copied from the input to the
#     between the comment and the function declaration>
# END DATA
#    <type of service> := LIST | LOOP | STUB | CASE | RETVAL | VALUE
#    <type declaration of value returned by called function>
#              must be void for LIST and CASE, boolean
#              for LOOP, and ulong for VALUE.
#    <prototype list for called function>
#    <number of cases for case service>
#    <type for case statement>
# END
#
# END REGISTRY
#
#
BEGIN REGISTRY FILESYS filesys_regcode

DEFINE open
/*
 * Open a file
 */
    RETVAL
    int
    const char *file_id, int flags, ulong mode
    8
    int device_group
END

DEFINE close
/*
 * Closes a file
 */
    RETVAL
    int
    int fd
    8
    int device_group
END


DEFINE read
/*
 * Reads from an open file
 */
    RETVAL
    int
    int fd, void *buffer, int byte_count
    8
    int device_group
END


DEFINE write
/*
 * Writes to an open file
 */
    RETVAL
    int
    int fd, void *buffer, int byte_count
    8
    int device_group
END


DEFINE lseek
/*
 * Seeks through an open file
 */
    RETVAL
    int
    int fd, int offset, int whence
    8
    int device_group
END


DEFINE stat
/*
 * Gets file status by file ID
 */
    RETVAL
    int
    const char *file_id, stat_t *status
    8
    int device_group
END


DEFINE fstat
/*
 * Gets file status by file ID
 */
    RETVAL
    int
    int fd, stat_t *status
    8
    int device_group
END


DEFINE istat
/*
 * Gets file status by device and index
 */
    RETVAL
    int
    const char *dev_id, int index, stat_t *status
    8
    int device_group
END


DEFINE fsstat
/*
 * Gets file system status by device ID
 */
    RETVAL
    int
    const char *dev_id, file_sys_stat_t *status
    8
    int device_group
END


DEFINE delete
/*
 * Deletes a file by file ID
 */
    RETVAL
    int
    const char *file_id
    8
    int device_group
END


DEFINE undelete
/*
 * Undeletes a file by device ID and index
 */
    RETVAL
    int
    const char *dev_id, int index, int mode
    8
    int device_group
END


DEFINE squeeze
/*
 * Squeezes (garbage collection) a file system device
 */
    RETVAL
    int
    const char *dev_id, int flag
    8
    int device_group
END


DEFINE getdents
/*
 * Gets directory entries from an open directory file
 */
    RETVAL
    int
    int fd, char *buffer, int buffer_length
    8
    int device_group
END


DEFINE settype
/*
 * Sets the file type for a file by file ID
 */
    RETVAL
    int
    const char *file_id, ulong file_type
    8
    int device_group
END


DEFINE geterrortext
/*
 * Translates an error code into a error text string
 */
    CASE
    void
    int error_code, char* buffer, int buffer_len
    8
    int device_group
END


DEFINE getdevicenames
/*
 * Gets a list of the device names support for this type
 */
    RETVAL
    int
    char *buffer, int buffer_len
    8
    int device_group
END

DEFINE ioctl
/*
 * Generic function to set/get file attribes by file id
 */
    RETVAL
    int
    const char *file_id, int func, void *arg
    8
    int device_group
END

DEFINE fioctl
/*
 * Generic function to set/get file attribes by file descriptor
 */
    RETVAL
    int
    int fd, int func, void *arg
    8
    int device_group
END


END REGISTRY
