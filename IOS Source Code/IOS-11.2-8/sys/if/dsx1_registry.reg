# $Id: dsx1_registry.reg,v 3.2.60.4 1996/09/07 22:36:35 jliu Exp $
#------------------------------------------------------------------
# dsx1_registry.reg - Service Points for Channelized T1/E1, PRI ISDN
#
# Bill May, August 30, 1994
#
# Copyright (c) 1994,1997 by cisco Systems, Inc.
# All rights reserved.
#
#------------------------------------------------------------------
# $Log: dsx1_registry.reg,v $
# Revision 3.2.60.4  1996/09/07  22:36:35  jliu
# CSCdi64205:  Unprovisioned T1 plugged into AS5200 causes box to hang
# Branch: California_branch
#     o The fix included display warning message to console port and used
#       SNMP notification to send the message to network management
#       station
#
# Revision 3.2.60.3  1996/09/02  10:31:51  styang
# CSCdi61183:  Cannot tell hardware revision of cards from command line
# Branch: California_branch
# To show hardware version info for the modem card and T1/E1 card.
#
# Revision 3.2.60.2  1996/07/11  22:39:25  jliu
# CSCdi62357:  need to support AT&T and ANSI facility data link standard
# Branch: California_branch
#            o Added new fdl command for t1 controller in order to support
#              CSU function
#
# Revision 3.2.60.1  1996/06/16  21:12:55  vnguyen
# Finally committing Brasil to California_branch
#
# Revision 3.2  1995/11/17  09:26:46  hampton
# Remove old entries from the RCS header logs.
#
# Revision 3.1  1995/11/09  11:48:45  shaker
# Bump version numbers from 2.x to 3.x.
#
# Revision 2.1  1995/06/07  20:51:27  hampton
# Bump version numbers from 1.x to 2.x.
#
#------------------------------------------------------------------
# $Endlog$
#
# Syntax for defining a registry
#
# Each item must begin a line of its own.
# Lines may be continued by ending with a \
#
# BEGIN REGISTRY <name of registry>
#
# DEFINE <name of service point>
# /* <comment lines in standard C format describing the
#     registry. These will be reformatted unless they are
#     in the comment bar format> */
# DATA
#    <Lines of text to be copied from the input to the
#     between the comment and the function declaration>
# END DATA
#    <type of service> := LIST | LOOP | STUB | CASE | RETVAL | VALUE
#    <type declaration of value returned by called function>
#              must be void for LIST and CASE, boolean
#              for LOOP, and ulong for VALUE.
#    <prototype list for called function>
#    <number of cases for case service>
#    <type for case statement>
# END
#
# END REGISTRY
#
#
BEGIN REGISTRY DSX1 dsx1_regcode

DEFINE dsx1_set_loopback
/*
 * set loopback on dsx1
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_set_clock_source
/*
 * set clock source on dsx1
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_set_a_law
/*
 * forcing dsx1 to a-law 
 */
    STUB
    void
    boolean sense, dsx1info *dsx1
END

DEFINE dsx1_set_framing
/*
 * set framing on dsx1
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_set_linecode
/*
 * set line code on dsx1
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_set_fdl
/*
 * set fdl standard on dsx1
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_set_cablelength
/*
 * set cable length on dsx1 (only for T1)
 */
    STUB
    void
    dsx1info *dsx1
END

DEFINE dsx1_map_channel
/*
 * map channel on dsx1
 */
    STUB
    void
    dsx1info *dsx1, hwidbtype *hwidb, int channel, ulong bitfield, int speed
END

DEFINE dsx1_create_idb
/*
 * Create dsx1 idb.  May be called with the idb already created.
 */
    STUB
    hwidbtype *
    cdbtype *cdb, hwidbtype *old, int channel
END

DEFINE dsx1_delete_idb
/* 
 * delete hardware idb
 */
    STUB
    void
    cdbtype *cdb, hwidbtype *hwidb
END

DEFINE dsx1_hwidb_board_encap
/*
 * If we have a board encap routine
 */
   STUB
   void
   hwidbtype *hwidb
END

DEFINE dsx1_loop
/*
 * Enable loopback from the dsx1 if there is loopback command pending
 */
    STUB
    void
    hwidbtype *hwidb
END

DEFINE dsx1_noloop
/*
 * Poll runts errors by disabling loopback from that dsx1
 */
    STUB
    void
    hwidbtype *hwidb
END

DEFINE dsx1_loopback_clk_switch
/*
 * AS5200, service for controlling the dsx1 line clock source 
 * during auto loopback.
 */
    STUB
    void
    dsx1info *dsx1, uchar event
END

DEFINE dsx1_add_signaling_interface
/*
 * Whenever a dsx1 signaling interface is allocated, this function is called
 */
        STUB
        void
        hwidbtype *hwidb
END

DEFINE dsx1_delete_signaling_interface
/*
 * Whenever a dsx1 signaling interface is deallocated, this function is called
 */
        STUB
        void
        hwidbtype *hwidb
END

DEFINE dsx1_set_cas_group
/*
 * Enable/disable cas group
 */
        STUB
        void
        dsx1info *dsx1
END

DEFINE show_nim_hw_ver
/*
 * Display t1/e1 hardware version info
 */
        STUB
        void
        cdbtype *cdb
END
END REGISTRY



