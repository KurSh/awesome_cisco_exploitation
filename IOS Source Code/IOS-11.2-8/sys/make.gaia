# $Id: make.gaia,v 3.1.2.1 1996/09/14 05:23:24 mvenugop Exp $
# $Source: /release/112/cvs/Xsys/make.gaia,v $
#------------------------------------------------------------------
# Makefile definitions and rules for GAIA builds
#
# September, 1996   Rich Livingston
#
# Copyright (c) 1996 by cisco Systems, Inc.
# All rights reserved.
#------------------------------------------------------------------
# $Log: make.gaia,v $
# Revision 3.1.2.1  1996/09/14  05:23:24  mvenugop
# CSCdi69188:  Updating Gaia changes
# Branch: California_branch
#
# Revision 3.1  1996/09/03  14:59:17  richl
# Placeholder.
#
#------------------------------------------------------------------
# $Endlog$
#

######################################################################
#
#	GAIA Images - Prototyping building & identifying images
#	For information only, please do not modify
#
######################################################################

# Gaia targets
PLATFORM_IMAGES = $(addsuffix .platform-feature-images,$(PRODUCTION_OBJDIRS))
PLATFORM_DATA = $(addsuffix .platform-feature-data,$(PRODUCTION_OBJDIRS))
FEATURE_IMAGES = $(addsuffix .feature-images,$(PRODUCTION_OBJDIRS))
FEATURE_DATA = $(addsuffix .feature-data,$(PRODUCTION_OBJDIRS))
INTERNAL_DATA = $(addsuffix .internal-data,$(PRODUCTION_OBJDIRS))
DEMO_DATA = $(addsuffix .demo-data,$(PRODUCTION_OBJDIRS))

######################################################################
#
#   GAIA Rules:
#
###############################################################################

# Base image definition
MOTHER_IMAGE_NAME       = gaia
# lego rules require the "image-" convention.
LEGO_IMAGE_NAME         = image-$(MOTHER_IMAGE_NAME)-

# List of features. This drives the gaia feature build

# Create lists that can be built simultaneously.

GAIALIST4K =	$(PROD_4K_OBJDIRS) 
GAIALIST68 =	$(PROD_68_OBJDIRS) 
GAIALIST36 =	$(PROD_36_OBJDIRS) 

# image names for all common features
PLATFORM_IMAGE_TARGETS  = $(addsuffix _$(MOTHER_IMAGE_NAME),$(PLATFORM_FEATURE_ABBRV))
PLATFORM_DATA_TARGETS  = $(addsuffix _feature_data,$(PLATFORM_FEATURE_ABBRV))
FEATURE_IMAGE_TARGETS  = $(addsuffix _$(MOTHER_IMAGE_NAME),$(FEATURE_ABBRV))
FEATURE_DATA_TARGETS   = $(addsuffix _feature_data,$(FEATURE_ABBRV))
FEATURE_PACK_DATA_TARGETS = $(addsuffix _feature_data, $(FEATURE_PACK_ABBRV))
DEMO_DATA_TARGETS   = $(addsuffix _demo_data,$(DEMO_ABBRV))
INTERNAL_DATA_TARGETS = $(addsuffix _feature_map,$(INTERNAL_ABBRV))

#
#       Build all features for all platforms
#
# Top level variables & rule to build all features for all platforms

# platform_images target set
platform_images-4K: $(addsuffix .platform-feature-images,$(GAIALIST4K))
platform_images-68: $(addsuffix .platform-feature-images,$(GAIALIST68))
platform_images-36: $(addsuffix .platform-feature-images,$(GAIALIST36))
PLATFORM_IMAGES = platform_images-4K platform_images-68 platform_images-36

# platform_data target set
platform_data-4K: $(addsuffix .platform-feature-data,$(GAIALIST4K))
platform_data-68: $(addsuffix .platform-feature-data,$(GAIALIST68))
platform_data-36: $(addsuffix .platform-feature-data,$(GAIALIST36))
PLATFORM_DATA = platform_data-4K platform_data-68 platform_data-36

# feature_images target set
feature_images-4K: $(addsuffix .feature-images,$(GAIALIST4K))
feature_images-68: $(addsuffix .feature-images,$(GAIALIST68))
feature_images-36: $(addsuffix .feature-images,$(GAIALIST36))
FEATURE_IMAGES = feature_images-4K feature_images-68 feature_images-36

# feature-data target set
feature-data-4K: $(addsuffix .feature-data,$(GAIALIST4K))
feature-data-68: $(addsuffix .feature-data,$(GAIALIST68))
feature-data-36: $(addsuffix .feature-data,$(GAIALIST36))
FEATURE_DATA = feature-data-4K feature-data-68 feature-data-36

# internal-data target set
internal_data-4K: $(addsuffix .internal-data,$(GAIALIST4K))
internal_data-68: $(addsuffix .internal-data,$(GAIALIST68))
internal_data-36: $(addsuffix .internal-data,$(GAIALIST36))
INTERNAL_DATA = internal_data-4K internal_data-68 internal_data-36

# demo-data target set
DEMO_DATA-4K: gaia-init $(addsuffix .demo-data,$(GAIALIST4K))
DEMO_DATA-68: gaia-init $(addsuffix .demo-data,$(GAIALIST68))
DEMO_DATA-36: gaia-init $(addsuffix .demo-data,$(GAIALIST36))
DEMO_DATA = DEMO_DATA-4K DEMO_DATA-68 DEMO_DATA-36
#DEMO_DATA = $(addsuffix .demo-data,$(PRODUCTION_OBJDIRS))

gaia-init:
	@echo "Initiating GAIA build"

%.demo-data:  
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) of Generic demo data in $*" ;\
	$(MAKE) "FEATURE_OBJDIR=$*" demo-data-build ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.internal-data:  
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) of Generic internal data in $*" ;\
	$(MAKE) "FEATURE_OBJDIR=$*" internal-data-build ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.feature-data:  
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) of Generic feature data in $*" ;\
	$(MAKE) "FEATURE_OBJDIR=$*" feature-data-build ; \
	echo "@: Executing $(MAKE) of feature pack data in $*" ;\
	$(MAKE) "FEATURE_OBJDIR=$*" feature-pack-data-build; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.platform-feature-data: 
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) of Platform feature data in $*" ;\
	$(MAKE) "FEATURE_OBJDIR=$*" platform-data-build ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.feature-images:
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) all Generic Modularity images in $*" ;\
	$(MAKE) -i "FEATURE_OBJDIR=$*" feature-images-build ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.platform-feature-images: %.feature-images
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
	@cd $(basename $@) ; \
	echo "$@: Executing $(MAKE) all Platform Modularity images in $*" ;\
	$(MAKE) -i "FEATURE_OBJDIR=$*" platform-images-build ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
		echo "$@: Error - $(MAKE) failed for $*"; \
	fi
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

# Initialize the packaging directory

SOFTPACKAGE_INIT = $(addsuffix .softpackage_dirs,$(PRODUCTION_OBJDIRS))

SOFTPACKAGE_INFO     = $(SOFTPACKAGE)/feature_info
SOFTPACKAGE_MAP      = $(SOFTPACKAGE)/feature_map
SOFTPACKAGE_SIZE     = $(SOFTPACKAGE)/feature_size
SOFTPACKAGE_UI       = $(SOFTPACKAGE)/feature_ui
SOFTPACKAGE_NM_UI    = $(SOFTPACKAGE)/managed_feature_ui

%.softpackage_dirs: %.clean_softpackage_dirs
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
ifeq ($(origin SOFTPACKAGE), undefined)
	@echo "$@: Error - need SOFTPACKAGE variable set"
	exit 1
else
	@[ -d $(SOFTPACKAGE_INFO)/$* ]     || mkdir -p $(SOFTPACKAGE_INFO)/$*
	@[ -d $(SOFTPACKAGE_MAP)/$* ]      || mkdir -p $(SOFTPACKAGE_MAP)/$*
	@[ -d $(SOFTPACKAGE_SIZE)/$* ]      || mkdir -p $(SOFTPACKAGE_SIZE)/$*
	@[ -d $(SOFTPACKAGE_UI)/$* ]       || mkdir -p $(SOFTPACKAGE_UI)/$*
	@[ -d $(SOFTPACKAGE_NM_UI)/$* ]    || mkdir -p $(SOFTPACKAGE_NM_UI)/$*
endif
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

%.clean_softpackage_dirs: 
	@echo "GAIA_TIMESTAMP: start $@ - `date`"
ifeq ($(origin SOFTPACKAGE), undefined)
	@echo "$@: Error - need SOFTPACKAGE variable set"
	exit 1
else
	@[ ! -d $(SOFTPACKAGE_INFO)/$* ] || rm -rf $(SOFTPACKAGE_INFO)/$*
	@[ ! -d $(SOFTPACKAGE_MAP)/$* ] || rm -rf $(SOFTPACKAGE_MAP)/$*
	@[ ! -d $(SOFTPACKAGE_SIZE)/$* ] || rm -rf $(SOFTPACKAGE_SIZE)/$*
	@[ ! -d $(SOFTPACKAGE_UI)/$* ] || rm -rf $(SOFTPACKAGE_UI)/$*
	@[ ! -d $(SOFTPACKAGE_NM_UI)/$* ] || rm -rf $(SOFTPACKAGE_NM_UI)/$*
endif
	@echo "GAIA_TIMESTAMP: end $@ - `date`"

# The target selected to build all features and feature data for all platforms

# Do the initialization once for all the platforms.
features.all-init: $(SOFTPACKAGE_INIT)
# Build the following platforms in parallel by running the script.
features.all4K: feature_images-4K platform_images-4K feature-data-4K platform_data-4K internal_data-4K
features.all68: feature_images-68 platform_images-68 feature-data-68 platform_data-68 internal_data-68
features.all36: feature_images-36 platform_images-36 feature-data-36 platform_data-36 internal_data-36
# Use the following target for serial build.
features.all: $(SOFTPACKAGE_INIT) $(FEATURE_IMAGES) $(PLATFORM_IMAGES) $(FEATURE_DATA) $(PLATFORM_DATA) $(INTERNAL_DATA)

# The target selected to buld the just the feature object files for all platform

feature-image.all: $(FEATURE_IMAGES) $(PLATFORM_IMAGES)

feature-data.all: $(SOFTPACKAGE_INIT) $(FEATURE_DATA) $(PLATFORM_DATA) $(INTERNAL_DATA)

feature-test.all: $(SOFTPACKAGE_INIT) $(DEMO_DATA) $(FEATURE_DATA) $(PLATFORM_DATA) $(INTERNAL_DATA)

####################################################################
#
# Feature Based Image build targets
#
####################################################################

%.fbi:
	@cd $(basename $@) ; \
	echo "Executing $(MAKE) feature_based_images in $(basename $@)" ;\
	$(MAKE) fbi_production ;

FEATURE_BASED_IMAGES_TARGETS = $(addsuffix .fbi,$(PRODUCTION_OBJDIRS))

fbi.all:        $(FEATURE_BASED_IMAGES_TARGETS)

############################################################################
#
#	GAIA distribution section
#
############################################################################

FBI_DISTSYMDIR = $(FBI_DISTBASE)/sym
FBI_DISTSUNDIR = $(FBI_DISTBASE)/sun
FBI_DISTBINDIR = $(FBI_DISTBASE)/bin

FBI_DISTDIRS4K=      $(addsuffix .fbi_dist,$(DISTLIST4K))
FBI_DISTDIRS68=      $(addsuffix .fbi_dist,$(DISTLIST68))
FBI_DISTDIRS36=      $(addsuffix .fbi_dist,$(DISTLIST36))
FBI_DISTDIRS=        $(addsuffix .fbi_dist,$(DISTLIST))
FBI_DISTEPILOGDIRS=  $(addsuffix .fbi_distepilog,$(DISTLIST))
FBI_DISTEPILOGDIRS4K=     $(addsuffix .fbi_distepilog,$(DISTLIST4K))
FBI_DISTEPILOGDIRS68=     $(addsuffix .fbi_distepilog,$(DISTLIST68))
FBI_DISTEPILOGDIRS36=     $(addsuffix .fbi_distepilog,$(DISTLIST36))

fbi_distclean:
ifeq ($(origin FBI_DISTBASE), undefined)
	@echo "$@: Error - need FBI_DISTBASE variable set"
	exit 1
else
	@[ -d $(FBI_DISTBASE) ] || mkdir $(FBI_DISTBASE)
	@[ -d $(FBI_DISTSYMDIR) ] || mkdir $(FBI_DISTSYMDIR)
	@[ -d $(FBI_DISTSUNDIR) ] || mkdir $(FBI_DISTSUNDIR)
	@[ -d $(FBI_DISTBINDIR) ] || mkdir $(FBI_DISTBINDIR)
	rm -f $(FBI_DISTBINDIR)/*
	rm -f $(FBI_DISTSUNDIR)/*
	rm -f $(FBI_DISTSYMDIR)/*
endif


fbi_distinit: 
ifeq ($(origin FBI_DISTBASE), undefined)
	@echo "$@: Error - need FBI_DISTBASE variable set"
	exit 1
else
	@[ -d $(FBI_DISTBASE) ] || mkdir $(FBI_DISTBASE)
	@[ -d $(FBI_DISTSYMDIR) ] || mkdir $(FBI_DISTSYMDIR)
	@[ -d $(FBI_DISTSUNDIR) ] || mkdir $(FBI_DISTSUNDIR)
	@[ -d $(FBI_DISTBINDIR) ] || mkdir $(FBI_DISTBINDIR)
endif

fbi_dist:   fbi_distinit $(FBI_DISTDIRS)
fbi_dist4K: fbi_distinit $(FBI_DISTDIRS4K)
fbi_dist68: fbi_distinit $(FBI_DISTDIRS68)
fbi_dist36: fbi_distinit $(FBI_DISTDIRS36)
fbi_distepilog: $(FBI_DISTEPILOGDIRS)

%.fbi_dist:
ifeq ($(origin FBI_DISTBASE), undefined)
	@exit 0
else
	@echo "$@: make -j$(DISTMAXJOBS) -C $* production.makedist_fbi"
	@echo "$@:     TFTPDIR=`pwd`/$* TFTPHOST= COLON= " 
	@$(MAKE) MAKEFLAG-J=-j$(DISTMAXJOBS) -C $* production.makedist_fbi \
        TFTPDIR=`pwd`/$* TFTPHOST= COLON= ; \
	make_status=$$? ; \
	if [ $$make_status -gt 0 ]; \
	then \
	   echo "$@: Error - make failed for production.makedist_fbi"; \
	fi
endif

%.fbi_distepilog: 
	@$(MAKE) -C $* production.distepilog_fbi \
	TFTPHOST= COLON= TFTPDIR=`pwd`/$*

######################################################################
#
#	End of GAIA distribution section
#
######################################################################

######################################################################
#
#	End of GAIA
#
######################################################################
