# $Id: mlpvt_registry.reg,v 1.1.42.3 1996/05/07 19:13:31 dblair Exp $
# $Source: /release/112/cvs/Xsys/mlpvt/mlpvt_registry.reg,v $
#------------------------------------------------------------------
# mlpvt_registry.reg - Service Points for MLPVT Registry
#
# Jan 1996, Ashwin Baindur
#
# Copyright (c) 1996-1997 by cisco Systems, Inc.
# All rights reserved.
#------------------------------------------------------------------
# $Log: mlpvt_registry.reg,v $
# Revision 1.1.42.3  1996/05/07  19:13:31  dblair
# CSCdi56726:  c1000: %SYS-3-SUPNONE: Registry 26 doesnt exist
# mlpvt is not in all images that contain multilink.  remove
# mlpvt_event_occured registry and use mlp_appoint_bundle instead.
# Branch: California_branch
#
# Revision 1.1.42.2  1996/05/06  18:08:58  syiu
# CSCdi56520:  Show ppp multilink not showing member links
# Branch: California_branch
#
# Revision 1.1.42.1  1996/04/27  06:34:39  syiu
# Branch: California_branch
# Commit Dial1_branch
#
# Revision 1.1.2.6  1996/03/09  07:18:07  syiu
# Branch: Dial1_branch
# Move virtual-template from mlpvt to mlp
#
# Revision 1.1.2.5  1996/03/01  21:43:15  abaindur
# Branch: Dial1_branch
#  o fix the query simulator; a casualty of the integration with MLP/VPN
#  o enhance query state m/c to handle case where a peer goes down just
#  when we're sending it a query msg. The TCP write blocks and a peer loss
#  event blows the peer state from beneath.
#
# Revision 1.1.2.4  1996/02/08  23:47:16  syiu
# Branch: Dial1_branch
# Support for CHAP challenge by stackname if locally defined
#
# Revision 1.1.2.3  1996/02/08  06:51:43  syiu
# Branch: Dial1_branch
# Tie together MLPVT/MLP/VPN registries, add vtemplate
# support in MLPVT
#
# Revision 1.1.2.2  1996/02/07  20:23:39  syiu
# Branch: Dial1_branch
# Add MLP Stackability calls support
#
# Revision 1.1.2.1  1996/01/26  20:28:45  agh
# Branch: Dial1_branch
# Initial Code Commit for MLPVT.
#
# Revision 1.1  1996/01/26  19:22:50  abaindur
# Initial revision
#
#------------------------------------------------------------------
# $Endlog$
#

#Syntax for defining a registry
#
# Each item must begin a line of its own.
# Lines may be continued by ending with a \
#
# BEGIN REGISTRY <name of registry>
#
# DEFINE <name of service point>
# /* <comment lines in standard C format describing the
#     registry. These will be reformatted unless they are
#     in the comment bar format> */
# DATA
#    <Lines of text to be copied from the input to the
#     between the comment and the function declaration>
# END DATA
#    <type of service> := LIST | LOOP | STUB | CASE | RETVAL | VALUE
#    <type declaration of value returned by called function>
#              must be void for LIST and CASE, boolean
#              for LOOP, and ulong for VALUE.
#    <prototype list for called function>
#    <number of cases for case service>
#    <type for case statement>
# END
#
# END REGISTRY
#
#

# 
# MLPVT group specific registries
#

BEGIN REGISTRY MLPVT

DEFINE  mlpvt_peer_msg_listener
/*
 * Index is event
 * Used to register the handler for incoming MLPVT group peer messages
 * Returns TRUE if processed
 */
        CASE
        void
	char *msg, int len
        0
        int msg_class
END

DEFINE mlpvt_query_lookup 
/*
 * API routine for VPN to query mastership of a bundle.
 */
        STUB
        boolean
        char *bundle_name, void *handle
END

DEFINE mlpvt_query_cancel
/*
 * API routine for VPN to cancel an earlier mastership
 * query request for a bundle.
 */
        STUB
        void
        char *bundle_name, void *handle
END

DEFINE mlpvt_find_stackname
/*
 * Get the Stack name defined locally
 */
        STUB
        boolean
        char *stackname, int len, ipaddrtype *source_ip
END 

DEFINE mlpvt_find_membername
/*
 * Get the member name defined locally
 */
        STUB
        boolean
        char *membername, int len, ipaddrtype addr
END 
END REGISTRY MLPVT
