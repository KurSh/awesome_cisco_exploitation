# $Id: makefile.monlib,v 3.1.68.5 1996/05/29 18:11:37 rchiao Exp $
# $Source: /release/112/cvs/Xsys/obj-4k-c7100/makefile.monlib,v $
#------------------------------------------------------------------
# makefile.monlib - Makefile for generating monlib images
#
# September 1995, Michael Beesley
#
# Copyright (c) 1995-1996 by cisco Systems, Inc.
# All rights reserved.
#------------------------------------------------------------------
# $Log: makefile.monlib,v $
# Revision 3.1.68.5  1996/05/29  18:11:37  rchiao
# CSCdi58957:  add rommon version file handling for ClearCase
# Branch: California_branch
#
# Revision 3.1.68.4  1996/05/08  23:03:38  mdb
# Fix minor breakage from CSCdi57043 commit. This should force the
# needed tools to be properly built before they are referenced.
# Branch: California_branch
#
# Revision 3.1.68.3  1996/05/08  12:01:43  mdb
# Implement a method of naming locally built tools based on the type of
# the Machine, the name and the revision of the Operating System.
# Also make provide for all locally built tools be to removed when a
# 'make superclean' is performed in the sys directory. [CSCdi57043]
# Branch: California_branch
#
# Revision 3.1.68.2  1996/04/06  02:05:25  ssangiah
# CSCdi53822:  Need to deal with product name change.
# Make changes to deal with the change in the product name for Predator
# from c7100 to c7200.
# Branch: California_branch
#
# Revision 3.1.68.1  1996/03/21  22:57:47  gstovall
# Branch: California_branch
# The ELC_branch now knows the joy of California dreaming.
#
# Revision 3.1.2.3  1996/03/18  23:16:50  mbeesley
# Branch: ELC_branch
# Sync to V111_1_3
#
# Revision 3.1.2.2  1996/01/04  04:40:23  mbeesley
# Branch: ELC_branch
# Make monlib dependancy building less verbose.
#
# Revision 3.1.2.1  1995/11/22  20:31:16  mbeesley
# Initial commit of c7100 support.
# Branch: ELC_branch
#
# Revision 3.1  1995/11/20  21:36:45  mbeesley
# Add placeholder files for future development.
#
#------------------------------------------------------------------
# $Endlog$
#

ifeq ($(origin SYSROOT), undefined)
SYSROOT :=       $(shell ../scripts/sysroot)
endif

default: all

#
# Include the support makefiles
#
include ../makefile.tools
include ../makefile.4k
include ../lib/makefile

#
# Make sure the correct version of make is being used
#
ifeq ($(origin USER),undefined)
USER=Bozo
endif

#
# Setup quiet / verbose
#
ifeq ($(origin QUIET), undefined)
QUIET_COM=@\#
QUIET_CMD=@
QUIET_CC=
else
QUIET_COM=@
QUIET_CMD=
QUIET_CC=@
endif

#
# Override evil defaults from the included makefiles
#
GNUM =		-G 0

#
# Declare some targets phony
#
.PHONY: all clean clobber depend force-tools install

#
# Setup some variables
#
SHELL=		/bin/sh
OPTIONS =
INCDIR= 	$(SYSROOT)/filesys
FSLIBSRCDIR = 	$(SYSROOT)/filesys
UTIL_DIR = 	$(SYSROOT)/rommon/utils

#
# Do not change the order of the includes - things will break
#
INC =		-I$(INCDIR) $(lib_inc) -I$(SYSROOT)/h \
		-I$(SYSROOT)/rommon/src \
		-I$(SYSROOT)/rommon/src-4k -I$(SYSROOT)/machine

DEFS =		-DFSLIB -DFSLIB_NO_DEBUG -DPREDATOR -DOBJECT_4K -DTARGET_CISCO
CPPOPTS =	-nostdinc $(INC) ${DEFS}

CCOPTS= -g $(GNUM) -fsigned-char -fno-builtin -mcpu=r4000 -mfp32 -mips2
ASOPTS= -g $(GNUM) -fsigned-char -fno-builtin -mcpu=r4000 -mfp64 -mips3
CFLAGS= -O ${OPTIONS} ${CPPOPTS} ${CCOPTS}
ASFLAGS= -O ${OPTIONS} ${CPPOPTS} ${ASOPTS}

#
# MONLIB defines
#
MONLIB = 	c7200-monlib-m

#
# FSLIB defines
#
FSLIB = 	c7200-fslib-m

FILESYS_DIR =	../filesys

FSLIBSRCS =	$(FILESYS_DIR)/scrt0_mips_fslib.S \
		$(FILESYS_DIR)/rommon_fslib_iface.c \
		$(FILESYS_DIR)/rommon_fslib_dev.c \
		$(FILESYS_DIR)/fslib.c \
		$(FILESYS_DIR)/fslib_dev_rom.c \
		$(FILESYS_DIR)/fslib_print.c \
		$(FILESYS_DIR)/c7100_ralib.c \
		$(FILESYS_DIR)/clpd6729.c

FSLIBHFILES =	../rommon/src/monlib.h \
		../rommon/src/mon_boot.h \
		../h/types.h \
		$(FILESYS_DIR)/fslib.h \
		$(FILESYS_DIR)/fslib_internals.h \
		$(FILESYS_DIR)/fslib_print.h \
		$(FILESYS_DIR)/fslib_dev.h \
		$(FILESYS_DIR)/fslib_dev_rom.h \
		$(FILESYS_DIR)/ralib.h \
		$(FILESYS_DIR)/filesys.h \
		$(FILESYS_DIR)/ralib.h \
		$(FILESYS_DIR)/clpd6720.h \
		$(FILESYS_DIR)/clpd6720_internals.h

FSLIBOBJS =	monlib_scrt0_mips_fslib.o \
		monlib_rommon_fslib_iface.o \
		monlib_rommon_fslib_dev.o \
		monlib_fslib.o \
		monlib_fslib_dev_rom.o \
		monlib_fslib_print.o \
		monlib_c7100_ralib.o \
		monlib_clpd6729.o

FSTESTSRCS =	$(FILESYS_DIR)/fslib.c \
		$(FILESYS_DIR)/fslib_dev_rom.c \
		$(FILESYS_DIR)/fslib_dev_ram.c \
		$(FILESYS_DIR)/fslib_print.c \
		$(FILESYS_DIR)/unix_filesys.c \
		$(FILESYS_DIR)/unix_ralib.c \
		$(FILESYS_DIR)/unix_fslib_dev.c \
		$(FILESYS_DIR)/unix_fslib_test.c

		
LDFLAGS = -e start $(GNUM) -N -T$(FILESYS_DIR)/c7100ram.link -nostdlib -static

#
# TARGET is the stripped ELF binary file, ELFFILE is unstripped
#
TARGET =	fslib
SYMFILE =	$(TARGET).sym
ELFFILE =	$(TARGET).elf
SRECFILE =	$(TARGET).srec

UTOOLS =	eprom_elf-$(NATIVE_OSREV) squish_elf-$(NATIVE_OSREV) \
		mkffsi-$(NATIVE_OSREV) 
HTOOLS =	hxld-$(NATIVE_OSREV)
TOOLS =		$(patsubst %,$(UTIL_DIR)/%,$(UTOOLS)) \
		$(patsubst %,$(UTIL_DIR)/hxldsrc/%,$(HTOOLS))

#
# Override RCS stuff
#
.SUFFIXES: .o .lis .S .c .s

%.o:
	$(QUIET_COM) echo "Compiling $< to $@"
	$(QUIET_CC)$(CC) -c $(CFLAGS) $< -o $@

%: %.o

%.o: %.S
	$(QUIET_COM) echo "Compiling $< to $@"
	$(QUIET_CC)$(CC) -c $(ASFLAGS) $<

%.lis: %.c
	lister3 CC=$(CC) AS=$(AS) $< $(CFLAGS) | grep -v '.stab' >$*.lis

#
# General rules and targets
#
all: $(MONLIB)

trunkd.test: monlib
	rm -f monlib

clean:
	rm -f $(FSLIBOBJS)

clobber: clean
	rm -f $(TARGET)*

superclean: clobber
	$(MAKE) --no-print-directory -C $(UTIL_DIR) clean

tools: force-tools
	@$(MAKE) --no-print-directory -C $(UTIL_DIR) depend $(UTOOLS)
	@$(MAKE) --no-print-directory -C $(SYSROOT)/obj-4k-c7100 $(MKSUM_ELF_PROG)
	@$(MAKE) --no-print-directory -C $(UTIL_DIR)/hxldsrc depend $(HTOOLS)

$(lib_shl):
	$(MAKE) --no-print-directory -f makefile $(lib_shl)

$(FSLIB): $(FSLIBOBJS) \
	  $(FILESYS_DIR)/c7100ram.link $(UTIL_DIR)/symbols_elf.sh \
	  tools $(lib_shl)
	$(LD) $(LDFLAGS) -o $(FSLIB) $(FSLIBOBJS) $(lib_shl)
	@$(SIZE) $(FSLIB)
	@$(NM) $(FSLIB) >$(FSLIB).symbols
	@SYSROOT=$(SYSROOT) $(UTIL_DIR)/symbols_elf.sh $(NM) $(FSLIB) $(FSLIB).symbols $(FSLIB)
	@$(STRIP) $(FSLIB)
	# Place C7100 machine id in ELF header
	$(MKSUM_ELF_PROG) $(FSLIB) -machine
	$(SQUISH_ELF_PROG) $(FSLIB) temp
	@mv temp $(FSLIB)

$(MONLIB): $(FSLIB) $(FSLIBSRCS) $(FSLIBOBJS) tools $(UTIL_DIR)/combpcode.sh
	$(MKFFSI_PROG) $(FSLIB) $(MONLIB)

fscreate: fscreate.c makefile
	$(QUIET_COM)echo "Building $@"
	$(QUIET_COM)$(CC_NATIVE) -DSTANDALONE -I../h -o fscreate fscreate.c

fstest: $(FSTESTSRCS) makefile
	$(QUIET_COM)echo "Building $@"
	$(QUIET_COM)$(CC_NATIVE) -DSTANDALONE -I../h -o fstest $(FSTESTSRCS)

#
# The include file dependencies
#
depend: dependancies.monlib $(FSLIBSRCS) $(FSLIBHFILES) $(ASM)
	@$(CC) $(CPPOPTS) -M $(FSLIBSRCS) $(ASM) | \
	    sed "/^[^ ]/s/^/monlib_/" > dependancies.monlib
	@etags -t $(FSLIBSRCS) $(FSLIBHFILES) $(ASM)

dependancies.monlib:
	$(QUIET_CC)rm -f dependancies.monlib
	$(QUIET_CC)touch dependancies.monlib

include dependancies.monlib
