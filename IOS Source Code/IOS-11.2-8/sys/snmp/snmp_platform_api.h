/* $Id: snmp_platform_api.h,v 3.3 1995/12/15 03:14:24 rpratt Exp $
 * $Source: /vws/aam/cherf.111/ios/sys/snmp/snmp_platform_api.h,v $
 *------------------------------------------------------------------
 * snmp_platform_api.h:  API between snmp and platform-specific code
 *
 * November 1995, Jeffrey T. Johnson
 *
 * Copyright (c) 1995 by cisco Systems, Inc.
 * All rights reserved.
 *------------------------------------------------------------------
 * $Log: snmp_platform_api.h,v $
 * Revision 3.3  1995/12/15  03:14:24  rpratt
 * CSCdi45651:  Chassis MIB enhancements made Port Ready
 *
 * Revision 3.2  1995/11/24  16:41:10  jjohnson
 * CSCdi42637:  platform-specific code should be moved out of sub_snmp
 * Install an API for accessing platform-specific SNMP objects
 *
 * Revision 3.1  1995/11/20  21:42:39  jjohnson
 * Initial placeholder
 *
 *------------------------------------------------------------------
 * $Endlog$
 */

/*
 * snmp_platform_get_oid()
 * Support routine used to allow platforms to return commonly used
 * object identifiers required by snmp or snmp mib implementations
 */

typedef enum snmp_platform_oid_type_ {
    /*
     * sys object id must be the value of sysObjectID assigned to
     * the platform
     */
    SNMP_PLATFORM_OID_SYS_OBJECT_ID,
} snmp_platform_oid_type;

extern OID *snmp_platform_get_oid(snmp_platform_oid_type);


/*
 * snmp_platform_get_value()
 * Support routine used to allow platforms to return commonly used
 * values required by snmp or snmp mib implementations
 */

typedef enum snmp_platform_value_type_ {
    /*
     * chassis type return value must be the value of an enumeration
     * of the chassisType mib object, and should be specified as one
     * of the D_chassisType* definitions generated by the mib compiler
     */
    SNMP_PLATFORM_CHASSIS_TYPE,

    /*
     * processor type return value must be the value of an enumeration
     * of the cardType mib object, and should be specified as one of
     * the D_cardType* definitions generated by the mib compiler
     */
    SNMP_PLATFORM_PROCESSOR_TYPE,

    /*
     * slots return value must be the number of slots in the chassis
     */
    SNMP_PLATFORM_SLOTS,
} snmp_platform_value_type;

extern uint snmp_platform_get_value(snmp_platform_value_type);


/*
 * snmp_platform_get_card_value()
 * Support routine used to allow platforms to return commonly used
 * card values required by snmp or snmp mib implementations
 */
 
typedef enum snmp_platform_card_value_type_ {
    /*
     * card operational status return value must be the value of an 
     * enumeration of the cardOperStatus mib object, and should be 
     * specified as one of the D_cardOperStatus* definitions generated 
     * by the mib compiler 
     */
    SNMP_PLATFORM_CARD_OPER_STATUS,
} snmp_platform_card_value_type;

extern int snmp_platform_get_card_value(uint, snmp_platform_card_value_type);


/*
 * snmp_platform_get_if_value()
 * Support routine used to allow platforms to return commonly used
 * interface values required by snmp or snmp mib implementations
 */
 
typedef enum snmp_platform_if_value_type_ {
    /*
     * cardIfCardIndex return value should be >= 0 and represent a valid
     * cardTable index for the card that directly contains the interface.
     */
    SNMP_PLATFORM_IF_CARD_INDEX,
    /*
     * cardIfCardIndex return value should be >= 0, and will be -1
     * for interfaces which are on cards not directly contained
     * by the chassis. USE OF cardIfSlotNumber SHOULD BE PHASED OUT
     * in favor of referencing the cardIfCardIndex into the cardTable
     * to find the slot number.
     */
    SNMP_PLATFORM_IF_SLOT_NUMBER,
    /*
     * cardIfPortNumber return value should be >= 0, and is the port,
     * numbered relative to the card identified by the interfaces
     * cardIfCardIndex.
     */
    SNMP_PLATFORM_IF_PORT_NUMBER,
    /*
     * cardIfConnectorTypeEnabled return value must be the value of an
     * enumeration of the cardIfConnectorTypeEnabled mib object, and 
     * should be specified as one of the D_cardIfConnectorTypeEnabled* 
     * definitions generated by the mib compiler 
     */
    SNMP_PLATFORM_IF_CONNECTOR_TYPE_ENABLED,
} snmp_platform_if_value_type;
 
extern int snmp_platform_get_if_value(hwidbtype *, 
					snmp_platform_if_value_type);
