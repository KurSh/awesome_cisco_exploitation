/* $Id: c4000_atmzr_sunipdh.h,v 3.2 1995/11/17 18:45:11 hampton Exp $
 * $Source: /swtal/cherf.111/ios/sys/src-c4000/c4000_atmzr_sunipdh.h,v $
 *------------------------------------------------------------------
 * C4000 router family ATM NIM SUNI-PDH PLIM register definitions.
 *
 * October, 1994  Walter R. Friedrich
 *
 * Copyright (c) 1994-1997 by cisco Systems, Inc.
 * All rights reserved.
 *
 *------------------------------------------------------------------
 * $Log: c4000_atmzr_sunipdh.h,v $
 * Revision 3.2  1995/11/17  18:45:11  hampton
 * Remove old entries from the RCS header logs.
 *
 * Revision 3.1  1995/11/09  13:26:23  shaker
 * Bump version numbers from 2.x to 3.x.
 *
 * Revision 2.3  1995/08/28  15:47:57  wfried
 * CSCdi39408:  ATM interface up decision should be based on more than
 * just LOS
 * Declare interface up only if PLCP framing or Cell delineation is
 * recognized for E3/DS3 interfaces.
 *
 * Revision 2.2  1995/06/27  00:31:04  wfried
 * CSCdi36069:  Performance tuning and changes on controller screen for
 * new interfac
 * Included more interface status in the show controller output,
 * forced ATM receiving packets to start at 16 byte boundaries for
 * better DBUS utilization, and made some fastswitching optimizations.
 * Created new ATM interface loopback command options and renamed E3
 * framing modes to reflect current terminology
 *
 * Revision 2.1  1995/06/07  22:56:12  hampton
 * Bump version numbers from 1.x to 2.x.
 *
 *------------------------------------------------------------------
 * $Endlog$
 */

#ifndef	__C4000_ATMZR_SUNIPDH_H__
#define	__C4000_ATMZR_SUNIPDH_H__


/*******************************************************************
                        Global Definitions
 *******************************************************************/
 
#define PDH_DS1_LINERATE	1500		/* DS1 line rate (kbps) */
#define PDH_DS3_LINERATE	45000		/* DS3 line rate (kbps) */
#define PDH_E1_LINERATE		2000		/* E1 line rate (kbps) */
#define PDH_E3_LINERATE		34000		/* E3 line rate (kbps) */


/*******************************************************************
			Register Bit Definitions
 *******************************************************************/

/*
 * Configuration Register (0x00)
 */
#define	PDH_CFG_LLB		0x80		/* Enable line loopback */
#define	PDH_CFG_E3ENBL		0x40		/* Enable E3 circuits */
#define	PDH_CFG_FIFOBP		0x20		/* Bypass rx/tx FIFOs */
#define	PDH_CFG_LOOPT		0x10		/* PLCP tx loopetimed to rx */
#define	PDH_CFG_FRMRBP		0x08		/* Bypass DS3/E3 framer */
#define	PDH_CFG_DLB		0x04		/* Enable data diagn loopback */
#define	PDH_CFG_PLB		0x02		/* En payload diagn loopback */
#define	PDH_CFG_CLB		0x01		/* Enable cell loopback */

/*
 * Interrupt Enable Register (0x01)
 */
#define	PDH_IE_SPLRE		0x80		/* SPLR block intr enable */
#define	PDH_IE_TXCPE		0x40		/* TXCP block intr enable */
#define	PDH_IE_RXCPE		0x20		/* RXCP block intr enable */
#define	PDH_IE_RBOCE		0x10		/* RBOC block intr enable */
#define	PDH_IE_FRMRE		0x08		/* FRMR block intr enable */
#define	PDH_IE_PMONE		0x04		/* PMON block intr enable */
#define	PDH_IE_XFDLE		0x02		/* XFDL block intr enable */
#define	PDH_IE_RFDLE		0x01		/* RFDL block intr enable */

/*
 * Interrupt Status Register (0x02)
 */
#define	PDH_IS_SPLRI		0x80		/* SPLR block intr status */
#define	PDH_IS_TXCPI		0x40		/* TXCP block intr status */
#define	PDH_IS_RXCPI		0x20		/* RXCP block intr status */
#define	PDH_IS_RBOCI		0x10		/* RBOC block intr status */
#define	PDH_IS_FRMRI		0x08		/* FRMR block intr status */
#define	PDH_IS_PMONI		0x04		/* PMON block intr status */
#define	PDH_IS_XFDLI		0x02		/* XFDL block intr status */
#define	PDH_IS_RFDLI		0x01		/* RFDL block intr status */

/*
 * Control Register (0x03)
 */
#define	PDH_CTL_TICLK		0x80		/* Select TICLK input clk */
#define	PDH_CTL_8KREF		0x40		/* Use 8KREF as tx clk refer */
#define	PDH_CTL_DLINV		0x20		/* Invert C-bit parity */
#define	PDH_CTL_RCLKINV		0x10		/* Invert RCLK to fall edge */
#define	PDH_CTL_RPNINV		0x08		/* Invert RPOS/RDAT inputs */
#define	PDH_CTL_TUNI		0x04		/* Enable unipolar data tx */
#define	PDH_CTL_TCLKINV		0x02		/* Invert TCLK to rising edge */
#define	PDH_CTL_TPNINV		0x01		/* Invert outp TPOS/TDAT ... */

/*
 * Identification and Master Reset Register (0x04)
 */
#define	PDH_IMR_RESET		0x80		/* Software chip reset */
#define	PDH_IMR_TYPE_MSK	0x70		/* Device type mask */
#define	PDH_IMR_ID_MSK		0x0F		/* Device version mask */

/*
 * Data Link and FERF Control Register (0x05)
 */
#define	PDH_DLC_LCDEN		0x80		/* Frmr LCD -> tx FERF */
#define	PDH_DLC_AISEN		0x40		/* Frmr AIS -> tx FERF */
#define	PDH_DLC_REDEN		0x20		/* Frmr RED -> tx FERF */
#define	PDH_DLC_OOFEN		0x10		/* Frmr OOF -> tx FERF */
#define	PDH_DLC_LOSEN		0x08		/* Frmr LOS -> tx FERF */
#define	PDH_DLC_TNETOP		0x04		/* Insert NR -> G.832 stream */
#define	PDH_DLC_TRACEN		0x02		/* TR byte generated by TTB */
#define	PDH_DLC_RNETOP		0x01		/* En G.832 E3 NR ext by RFDL */

/*
 * RBOC Configuration/Interrupt Enable Register (0x06)
 */
#define	PDH_RBOC_CIE_IDLE	0x04		/* FEAC removal intr enable */
#define	PDH_RBOC_CIE_AVC	0x02		/* FEAAC valid 4/5, rem 1 */
#define	PDH_RBOC_CIE_FEACE	0x01		/* FEAC detection intr enable */

/*
 * RBOC Interrupt Status Register (0x07)
 */
#define	PDH_RBOC_IS_IDLI	0x80		/* FEAC removal intr status */
#define	PDH_RBOC_IS_FEACI	0x40		/* New FEAC code valid intr */
#define	PDH_RBOC_IS_FEAC_MSK	0x3F		/* New FEAC code value */

/*
 * DS3 FRMR Configuration Register (0x08)
 */
#define	PDH_T3FRMR_CFG_AISPAT	0x80		/* AIS pattern = 1010 */
#define	PDH_T3FRMR_CFG_FDET	0x40		/* IDLE, AIS, RED fast detect */
#define	PDH_T3FRMR_CFG_MBDIS	0x20		/* Dis M-bit er to cause OOF */
#define	PDH_T3FRMR_CFG_M3O8	0x10		/* OOF when 3/8 F-bits error */
#define	PDH_T3FRMR_CFG_UNI	0x08		/* Accept single-rail DS3 str */
#define	PDH_T3FRMR_CFG_REFR	0x04		/* Init frame align search */
#define	PDH_T3FRMR_CFG_AISC	0x02		/* All DS3 C-bits 0 -> AIS */
#define	PDH_T3FRMR_CFG_CBE	0x01		/* En C-bit parity mode */

/*
 * DS3 FRMR Interrupt Enable Register w/ ACE=0 (0x09)
 */
#define	PDH_T3FRMR_IE_COFAE	0x80		/* Frame align DS3 chg int en */
#define	PDH_T3FRMR_IE_REDE	0x40		/* DS3 RED state chg intr en */
#define	PDH_T3FRMR_IE_CBITE	0x20		/* DS3 appl id chn cgh int en */
#define	PDH_T3FRMR_IE_FERFE	0x10		/* DS3 far end rx fail int en */
#define	PDH_T3FRMR_IE_IDLE	0x08		/* DS3 IDLE maint sign int en */
#define	PDH_T3FRMR_IE_AISE	0x04		/* DS3 AIS maint sign intr en */
#define	PDH_T3FRMR_IE_OOFE	0x02		/* DS3 out of frm def intr en */
#define	PDH_T3FRMR_IE_LOSE	0x01		/* DS3 loss of sign intr en */

/*
 * DS3 FRMR Additional Configuration Register w/ ACE=1 (0x09)
 */
#define	PDH_T3FRMR_ACFG_AISONES	0x20		/* Unframed all 1's -> AIS */
#define	PDH_T3FRMR_ACFG_BPVO	0x10		/* Only BPVs not part of B3ZS */
#define	PDH_T3FRMR_ACFG_EXZSO	0x08		/* EXAZ incr by 0's over 85 */
#define	PDH_T3FRMR_ACFG_EXZDET	0x04		/* Excess 0's -> 1 LCV pulse */
#define	PDH_T3FRMR_ACFG_SALGO	0x02		/* 0,BPV -> valid B3ZS */
#define	PDH_T3FRMR_ACFG_DALGO	0x01		/* 0,-BPV -> valid B3ZS */

/*
 * DS3 FRMR Interrupt Status Register (0x0A)
 */
#define	PDH_T3FRMR_IS_COFAI	0x80		/* Change of frame align intr */
#define	PDH_T3FRMR_IS_REDI	0x40		/* Change of DS3 RED intr */
#define	PDH_T3FRMR_IS_CBITI	0x20		/* DS3 appl id chnl chng intr */
#define	PDH_T3FRMR_IS_FERFI	0x10		/* FERF def detect/remvd intr */
#define	PDH_T3FRMR_IS_IDLI	0x08		/* IDLE maint sign det/rm int */
#define	PDH_T3FRMR_IS_AISI	0x04		/* AIS maint sign det/rmv int */
#define	PDH_T3FRMR_IS_OOFI	0x02		/* Out of frame det/rmvd intr */
#define	PDH_T3FRMR_IS_LOSI	0x01		/* Loss of sign det/rmvd intr */

/*
 * DS3 FRMR Status Register (0x0B)
 */
#define	PDH_T3FRMR_STAT_ACE	0x80		/* Additional Cfg Reg select */
#define	PDH_T3FRMR_STAT_REDV	0x40		/* DS3 RED indication state */
#define	PDH_T3FRMR_STAT_CBITV	0x20		/* Appl id channel state */
#define	PDH_T3FRMR_STAT_FERFV	0x10		/* Far end recv failure state */
#define	PDH_T3FRMR_STAT_IDLV	0x08		/* IDLE signal state */
#define	PDH_T3FRMR_STAT_AISV	0x04		/* Alarm ind sign state */
#define	PDH_T3FRMR_STAT_OOFV	0x02		/* DS3 out of frame state */
#define	PDH_T3FRMR_STAT_LOSV	0x01		/* Loss of signal state */

/*
 * RFDL Configuration Register (0x0C)
 */
#define	PDH_RFDL_CFG_TR		0x02		/* Terminate recp maint msg */
#define	PDH_RFDL_CFG_EN		0x01		/* En recp HDLC maint msgs */

/*
 * RFDL Enable/Status Register (0x0D)
 */
#define	PDH_RFDL_ES_INTC_DIS	0x00		/* Disable HDLC intr */
#define	PDH_RFDL_ES_INTC_FFRX1	0x02		/* En FIFO recv 1 byte intr */
#define	PDH_RFDL_ES_INTC_FFRX2	0x04		/* En FIFO recv 2 byte intr */
#define	PDH_RFDL_ES_INTC_FFRX3	0x06		/* En FIFO recv 3 byte intr */
#define	PDH_RFDL_ES_INTC_MSK	0x06		/* HDLC intr select mask */
#define	PDH_RFDL_ES_INT		0x01		/* HDLC FIFO fill intr status */

/*
 * RFDL Status Register (0x0E)
 */
#define	PDH_RFDL_STAT_FE	0x80		/* FIFO empty */
#define	PDH_RFDL_STAT_OVR	0x40		/* FIFO overflow */
#define	PDH_RFDL_STAT_FLG	0x20		/* LAPD flag seq 01111110 det */
#define	PDH_RFDL_STAT_EOM	0x10		/* End of path maint msg */
#define	PDH_RFDL_STAT_CRC	0x08		/* CCITT-CRC error detected */
#define	PDH_RFDL_STAT_NVB_MSK	0x07		/* # valid bits in Rx Dat Reg */

/*
 * Change of PMON Performance Meters Register (0x10)
 */
#define	PDH_PMON_PM_LCVCH	0x20		/* Line code viol ev detected */
#define	PDH_PMON_PM_FERRCH	0x10		/* F-bit or M-bit errors det */
#define	PDH_PMON_PM_SLCVCH	0x08		/* Summed line code viol det */
#define	PDH_PMON_PM_PERRCH	0x04		/* Parity error event det */
#define	PDH_PMON_PM_CPERRCH	0x02		/* Path parity error ev det */
#define	PDH_PMON_PM_FEBECH	0x01		/* FEBE event detected */

/*
 * PMON Interrupt Enable/Status Register (0x11)
 */
#define	PDH_PMON_IES_INTE	0x04		/* Cntr values transf intr en */
#define	PDH_PMON_IES_INTR	0x02		/* Cntr values transf intr */
#define	PDH_PMON_IES_OVR	0x01		/* Interrupt overrun */

/*
 * DS3 TRAN Configuration Register (0x20)
 */
#define	PDH_T3TRAN_CFG_CBTRAN	0x80		/* Normal C-bit insertion */
#define	PDH_T3TRAN_CFG_AIS	0x40		/* Insert AIS into DS3 payld */
#define	PDH_T3TRAN_CFG_IDL	0x20		/* Insert IDLE maint signal */
#define	PDH_T3TRAN_CFG_FERF	0x10		/* Insert FERF maint signal */
#define	PDH_T3TRAN_CFG_CBIT	0x01		/* Enable C-bit parity appl */

/*
 * DS3 TRAN Diagnostic Register (0x21)
 */
#define	PDH_T3TRAN_DIAG_DLOS	0x80		/* Insert LOS signal */
#define	PDH_T3TRAN_DIAG_DLCV	0x40		/* Insert line code viol sign */
#define	PDH_T3TRAN_DIAG_DFERR	0x10		/* Insert F-bit framing error */
#define	PDH_T3TRAN_DIAG_DMERR	0x08		/* Invert M-bits */
#define	PDH_T3TRAN_DIAG_DCPERR	0x04		/* Insert path parity errors */
#define	PDH_T3TRAN_DIAG_DPERR	0x02		/* Insert P-bit errors */
#define	PDH_T3TRAN_DIAG_DFEBE	0x01		/* Insert far end block error */

/*
 * XFDL Configuration Register (0x24)
 */
#define	PDH_XFDL_CFG_EOM	0x10		/* Tx Data Reg is msg last */
#define	PDH_XFDL_CFG_INTE	0x08		/* Tx maint DL serv rq int en */
#define	PDH_XFDL_CFG_ABT	0x04		/* Transmit HDLC abort code */
#define	PDH_XFDL_CFG_CRC	0x02		/* Append CCITT-CRC to msg */
#define	PDH_XFDL_CFG_EN		0x01		/* XFDL block enable */

/*
 * XFDL Interrupt Status Register (0x25)
 */
#define	PDH_XFDL_IS_INT		0x02		/* Rdy for new tx data intr */
#define	PDH_XFDL_IS_UDR		0x01		/* Underrun intr */

/*
 * SPLR Configuration Register (0x28)
 */
#define	PDH_SPLR_CFG_FORM_DS3	0x00		/* PLCP fram frmt = DS3 */
#define	PDH_SPLR_CFG_FORM_E3	0x40		/* PLCP fram frmt = G.751 E3 */
#define	PDH_SPLR_CFG_FORM_DS1	0x80		/* PLCP fram frmt = DS1 */
#define	PDH_SPLR_CFG_FORM_E1	0xC0		/* PLCP fram frmt = E1 */
#define	PDH_SPLR_CFG_FORM_MSK	0xC0		/* PLCP framing format mask */
#define	PDH_SPLR_CFG_REFRAME	0x08		/* Reinitiate frame alignment */
#define	PDH_SPLR_CFG_PLCPEN	0x04		/* Enable PLCP framing */
#define	PDH_SPLR_CFG_EXT	0x01		/* Dis overhead bits identif */

/*
 * SPLR Interrupt Enable Register (0x29)
 */
#define	PDH_SPLR_IE_FEBEE	0x40		/* Far end block error int en */
#define	PDH_SPLR_IE_COLSSE	0x20		/* Chg PLCP link stat int en */
#define	PDH_SPLR_IE_BIPEE	0x10		/* Bit interl par err int en */
#define	PDH_SPLR_IE_FEE		0x08		/* Framing octet error int en */
#define	PDH_SPLR_IE_YELE	0x04		/* Yellow alarm def intr en */
#define	PDH_SPLR_IE_LOFE	0x02		/* Loss of frame def intr en */
#define	PDH_SPLR_IE_OOFE	0x01		/* Out of frame def intr en */

/*
 * SPLR Interrupt Status Register (0x2A)
 */
#define	PDH_SPLR_IS_FEBEI	0x40		/* Far end block error intr */
#define	PDH_SPLR_IS_COLSSI	0x20		/* Chg PLCP link stat intr */
#define	PDH_SPLR_IS_BIPEI	0x10		/* Bit interl par err intr */
#define	PDH_SPLR_IS_FEI		0x08		/* Framing octet error intr */
#define	PDH_SPLR_IS_YELI	0x04		/* Yellow alarm def intr */
#define	PDH_SPLR_IS_LOFI	0x02		/* Loss of frame def intr */
#define	PDH_SPLR_IS_OOFI	0x01		/* Out of frame def intr */

/*
 * SPLR Status Register (0x2B)
 */
#define	PDH_SPLR_STAT_LSS_MSK	0x70		/* Link status sign code mask */
#define	PDH_SPLR_STAT_YELV	0x04		/* Yellow alarm defect state */
#define	PDH_SPLR_STAT_LOFV	0x02		/* Loss of frame def state */
#define	PDH_SPLR_STAT_OOFV	0x01		/* Out of frame defect state */

/*
 * SPLT Configuration Register (0x2C)
 */
#define	PDH_SPLT_CFG_FORM_DS3	0x00		/* Frame format = DS3 */
#define	PDH_SPLT_CFG_FORM_E3	0x40		/* Frame format = G.751 E3 */
#define	PDH_SPLT_CFG_FORM_DS1	0x80		/* Frame format = DS1 */
#define	PDH_SPLT_CFG_FORM_E1	0xC0		/* Frame format = E1 */
#define	PDH_SPLT_CFG_FORM_MSK	0xC0		/* Frame format mask */
#define	PDH_SPLT_CFG_M1TYPE	0x20		/* M1 octect code */
#define	PDH_SPLT_CFG_M2TYPE	0x10		/* M2 octect code */
#define	PDH_SPLT_CFG_FIXSTUFF	0x08		/* En octect/nibble stuffing */
#define	PDH_SPLT_CFG_PLCPEN	0x04		/* Frame insertion enable */
#define	PDH_SPLT_CFG_EXT	0x01		/* Dis overhead bits identif */

/*
 * SPLT Control Register (0x2D)
 */
#define	PDH_SPLT_CTL_SRCZN	0x40		/* Select Z bits source */
#define	PDH_SPLT_CTL_SRCF1	0x20		/* Select F1 bit source */
#define	PDH_SPLT_CTL_SRCB1	0x10		/* Select B1 bit source */
#define	PDH_SPLT_CTL_SRCG1	0x08		/* Select G1 bit source */
#define	PDH_SPLT_CTL_SRCM1	0x04		/* Select M1 bit source */
#define	PDH_SPLT_CTL_SRCM2	0x02		/* Select M2 bit source */
#define	PDH_SPLT_CTL_SRCC1	0x01		/* Select C1 bit source */

/*
 * SPLT Diagnostics and G1 Octet Register (0x2E)
 */
#define	PDH_SPLT_DIAG_DPFRM	0x80		/* Insert POHID parity errors */
#define	PDH_SPLT_DIAG_DAFRM	0x40		/* Insert frame align patt er */
#define	PDH_SPLT_DIAG_DB1	0x20		/* Insert 1 BIP error/frame */
#define	PDH_SPLT_DIAG_DFEBE	0x10		/* Insert 1 FEBE error/frame */
#define	PDH_SPLT_DIAG_YEL	0x08		/* Tx yellow alarm signal */
#define	PDH_SPLT_DIAG_LSS_MSK	0x07		/* G1's link stat signal code */

/*
 * CPPM Loss of Clock Meters Register (0x30)
 */
#define	PDH_CPPM_LOCM_LOTC	0x02		/* No TICLK transitions det */
#define	PDH_CPPM_LOCM_LORC	0x01		/* No RCLK transitions det */

/*
 * CPPM Change of CPPM Performance Meters Register (0x31)
 */
#define	PDH_CPPM_COPM_TCELLCH	0x40		/* Tx cell FIFO read */
#define	PDH_CPPM_COPM_RCELLCH	0x20		/* Rx cell FIFO read */
#define	PDH_CPPM_COPM_UICELLCH	0x10		/* Idle/Unassign cell dropped */
#define	PDH_CPPM_COPM_HCSECH	0x08		/* HCS error detected */
#define	PDH_CPPM_COPM_FEBECH	0x04		/* Far end block error det */
#define	PDH_CPPM_COPM_FECH	0x02		/* Frame align patt octet err */
#define	PDH_CPPM_COPM_BIPECH	0x01		/* Bit interleaved parity err */

/*
 * RXCP Control Register (0x40)
 */
#define	PDH_RXCP_CTL_HCSPASS	0x80		/* En recv cells w/ HCS error */
#define	PDH_RXCP_CTL_HCSDQDB	0x40		/* Sel HCS header coverage */
#define	PDH_RXCP_CTL_HCSADD	0x20		/* En add coset polyn to HCS */
#define	PDH_RXCP_CTL_HCK	0x10		/* Do FIFO data path check */
#define	PDH_RXCP_CTL_BLOCK	0x08		/* En Idle/Unas/Usr cell filt */
#define	PDH_RXCP_CTL_DSCR	0x04		/* Enable payload discrambl */
#define	PDH_RXCP_CTL_OOCDV	0x02		/* Out of cell delin def stat */
#define	PDH_RXCP_CTL_FIFORST	0x01		/* Reset recv FIFO */

/*
 * RXCP Framing Control Register (0x41)
 */
#define	PDH_RXCP_FRC_REMPTY0	0x80		/* Select RCA signal advance */
#define	PDH_RXCP_FRC_LCDE	0x40		/* LCD state change intr en */
#define	PDH_RXCP_FRC_LCDI	0x20		/* LCD state change intr */
#define	PDH_RXCP_FRC_LCD	0x10		/* Loss of Cell Delin state */
#define	PDH_RXCP_FRC_FIXPAT	0x08		/* Insert HCS fixed pattern */
#define	PDH_RXCP_FRC_DETHYS_1ST	0x00		/* Thrsh = 1st err-free cell */
#define	PDH_RXCP_FRC_DETHYS_2ND	0x02		/* Thrsh = 2nd err-free cell */
#define	PDH_RXCP_FRC_DETHYS_4TH	0x04		/* Thrsh = 4th err-free cell */
#define	PDH_RXCP_FRC_DETHYS_8TH	0x06		/* Thrsh = 8th err-free cell */
#define	PDH_RXCP_FRC_DETHYS_MSK	0x06		/* HCS err cell accept thresh */
#define	PDH_RXCP_FRC_DELIN	0x01		/* Enable ATMF Cell Delin blk */

/*
 * RXCP Interrupt Enable/Status Register (0x42)
 */
#define	PDH_RXCP_IES_OOCDE	0x80		/* Out of cell delin intr en */
#define	PDH_RXCP_IES_HCSE	0x40		/* HCS error intr enable */
#define	PDH_RXCP_IES_FIFOE	0x20		/* Recv FIFO overrun intr en */
#define	PDH_RXCP_IES_OOCDI	0x10		/* Out of cell delin intr */
#define	PDH_RXCP_IES_HCSI	0x08		/* HCS error intr */
#define	PDH_RXCP_IES_COCAI	0x04		/* Change of cell align intr */
#define	PDH_RXCP_IES_FOVRI	0x02		/* Recv FIFO overrun intr */
#define	PDH_RXCP_IES_FUDRI	0x01		/* Recv FIFO underrun intr */

/*
 * RXCP HCS Control/Status Register (0x53)
 */
#define	PDH_RXCP_HCSCS_CHCSI	0x02		/* Correctable HCS intr */
#define	PDH_RXCP_HCSCS_HECEN	0x01		/* Enable HCS single correct */

/*
 * TXCP Control Register (0x58)
 */
#define	PDH_TXCP_CTL_HCSINS	0x80		/* Insert HCS */
#define	PDH_TXCP_CTL_HCSDQDB	0x40		/* Sel HCS cell hdr coverage */
#define	PDH_TXCP_CTL_HCSADD	0x20		/* En add coset polyn to HCS */
#define	PDH_TXCP_CTL_FIFODP_4	0x00		/* Tx FIFO depth = 4 cells */
#define	PDH_TXCP_CTL_FIFODP_3	0x08		/* Tx FIFO depth = 3 cells */
#define	PDH_TXCP_CTL_FIFODP_2	0x10		/* Tx FIFO depth = 2 cells */
#define	PDH_TXCP_CTL_FIFODP_1	0x18		/* Tx FIFO depth = 1 cell */
#define	PDH_TXCP_CTL_FIFODP_MSK	0x18		/* Tx FIFO depth mask */
#define	PDH_TXCP_CTL_SCR	0x04		/* Enable cell payload scramb */
#define	PDH_TXCP_CTL_DHCS	0x02		/* Insert 1 HCS error/cell */
#define	PDH_TXCP_CTL_FIFORST	0x01		/* Reset transmit FIFO */

/*
 * TXCP Interrupt Enable/Status and Control Register (0x59)
 */
#define	PDH_TXCP_IESCL_FIXPAT	0x80		/* HCS placeholder = 0x55 */
#define	PDH_TXCP_IESCL_HCKE	0x40		/* FIFO datapath error int en */
#define	PDH_TXCP_IESCL_FIFOE	0x20		/* Tx FIFO overrun intr en */
#define	PDH_TXCP_IESCL_TFULL0	0x10		/* Select TCA signal advance */
#define	PDH_TXCP_IESCL_HCKI	0x08		/* FIFO datapath error intr */
#define	PDH_TXCP_IESCL_COCAI	0x04		/* Change of cell align intr */
#define	PDH_TXCP_IESCL_FOVRI	0x02		/* Tx FIFO overrun intr */

/*
 * E3 FRMR Framing Options Register (0x60)
 */
#define	PDH_E3FRMR_FOPT_UNI	0x10		/* Select unipolar recv data */
#define	PDH_E3FRMR_FOPT_FR_G751	0x00		/* Framing format = G.751 E3 */
#define	PDH_E3FRMR_FOPT_FR_G832	0x04		/* Framing format = G.832 E3 */
#define	PDH_E3FRMR_FOPT_FR_MSK	0x0C		/* Framing format mask */
#define	PDH_E3FRMR_FOPT_REFRDIS	0x02		/* Dis refram consec fram err */
#define	PDH_E3FRMR_FOPT_REFR	0x01		/* Init frame alignment */

/*
 * E3 FRMR Maintenance Options Register (0x61)
 */
#define	PDH_E3FRMR_MOPT_WORDBIP	0x20		/* Parity bit error meaning */
#define	PDH_E3FRMR_MOPT_TANDEM	0x10		/* Use NETOP for conn maint */
#define	PDH_E3FRMR_MOPT_WORDERR	0x08		/* FERR -> 1 PMON pulse/frame */
#define	PDH_E3FRMR_MOPT_PYLDJST	0x04		/* PYLD&JUST bits are payload */
#define	PDH_E3FRMR_MOPT_FERFDET	0x02		/* FERF/RAI 5 frms -> stat ch */
#define	PDH_E3FRMR_MOPT_TMRKDET	0x01		/* TimMrk 5 frms -> TIMINGMK */

/*
 * E3 FRMR Framing Interrupt Enable Register (0x62)
 */
#define	PDH_E3FRMR_FIE_CZDE	0x10		/* HDB3 4 cons 0s intr en */
#define	PDH_E3FRMR_FIE_LOSE	0x08		/* Loss of signal intr en */
#define	PDH_E3FRMR_FIE_LCVE	0x04		/* Line code viol intr en */
#define	PDH_E3FRMR_FIE_COFAE	0x02		/* Chg of frame align intr en */
#define	PDH_E3FRMR_FIE_OOFE	0x01		/* Chg of OOF intr en */

/*
 * E3 FRMR Framing Interrupt Indication and Status Register (0x63)
 */
#define	PDH_E3FRMR_FIIS_CZDI	0x40		/* HDB3 str 4 con 0s intr */
#define	PDH_E3FRMR_FIIS_LOSI	0x20		/* Loss of signal intr */
#define	PDH_E3FRMR_FIIS_LCVI	0x10		/* Line code violation intr */
#define	PDH_E3FRMR_FIIS_COFAI	0x08		/* Chg of frame alignment int */
#define	PDH_E3FRMR_FIIS_OOFI	0x04		/* OOF signal transition intr */
#define	PDH_E3FRMR_FIIS_LOS	0x02		/* Loss of signal intr */
#define	PDH_E3FRMR_FIIS_OOF	0x01		/* OOF intr */

/*
 * E3 FRMR Maintenance Event Interrupt Enable Register (0x64)
 */
#define	PDH_E3FRMR_MEIE_FERRE	0x80		/* Framing bit error intr en */
#define	PDH_E3FRMR_MEIE_PERRE	0x40		/* BIP-8 error (G.832) int en */
#define	PDH_E3FRMR_MEIE_AISDE	0x20		/* AISD intr enable */
#define	PDH_E3FRMR_MEIE_FERFE	0x10		/* Far end recv fail intr en */
#define	PDH_E3FRMR_MEIE_FEBEE	0x08		/* Far end blk error intr en */
#define	PDH_E3FRMR_MEIE_PTYPEE	0x04		/* Payl type bits chg int en */
#define	PDH_E3FRMR_MEIE_TIMEMKE	0x02		/* Timing Mrk bit chg int en */
#define	PDH_E3FRMR_MEIE_NATUSEE	0x01		/* Nationl Use bit chg int en */

/*
 * E3 FRMR Maintenance Event Interrupt Indication Register (0x65)
 */
#define	PDH_E3FRMR_MEII_FERRI	0x80		/* Framing bit error intr */
#define	PDH_E3FRMR_MEII_PERRI	0x40		/* BIP-8 error (G.832) intr */
#define	PDH_E3FRMR_MEII_AISDI	0x20		/* AISD intr */
#define	PDH_E3FRMR_MEII_FERFI	0x10		/* Far end recv fail intr */
#define	PDH_E3FRMR_MEII_FEBEI	0x08		/* Far end blk error intr */
#define	PDH_E3FRMR_MEII_PTYPEI	0x04		/* Payl type bits chg int */
#define	PDH_E3FRMR_MEII_TIMEMKI	0x02		/* Timing Mrk bit chg int */
#define	PDH_E3FRMR_MEII_NATUSEI	0x01		/* Nationl Use bit chg int */

/*
 * E3 FRMR Maintenance Event Status Register (0x66)
 */
#define	PDH_E3FRMR_MES_AISD	0x80		/* Alarm Ind Signal state */
#define	PDH_E3FRMR_MES_FERFRAI	0x40		/* Far end ind failure state */
#define	PDH_E3FRMR_MES_FEBE	0x20		/* Far end block error state */
#define	PDH_E3FRMR_MES_PT_MSK	0x1C		/* Payload type bits mask */
#define	PDH_E3FRMR_MES_TIMEMK	0x82		/* Timing Marker bit state */
#define	PDH_E3FRMR_MES_NATUSE	0x81		/* National Use bit state */

/*
 * E3 TRAN Framing Options Register (0x68)
 */
#define	PDH_E3TRAN_FOPT_NRONLY	0x20		/* Insert NR byte only */
#define	PDH_E3TRAN_FOPT_EMINTGR	0x10		/* Correct BIP-8 byte */
#define	PDH_E3TRAN_FOPT_TANDEM	0x08		/* Insrt BIP-8 er ct bits 1-4 */
#define	PDH_E3TRAN_FOPT_FR_G751	0x00		/* Framing format = G.751 E3 */
#define	PDH_E3TRAN_FOPT_FR_G832	0x01		/* Framing format = G.832 E3 */
#define	PDH_E3TRAN_FOPT_FR_MSK	0x03		/* Framing format mask */

/*
 * E3 TRAN Status and Diagnostic Options Register (0x69)
 */
#define	PDH_E3TRAN_SDOPT_PYLDJ	0x40		/* See Justif bits as payload */
#define	PDH_E3TRAN_SDOPT_CPERR	0x20		/* En cont gen of BIP-8 err */
#define	PDH_E3TRAN_SDOPT_DFERR	0x10		/* Invert framing pattern */
#define	PDH_E3TRAN_SDOPT_DLCV	0x08		/* Generate single code viol */
#define	PDH_E3TRAN_SDOPT_BAIS	0x04		/* Toggle output signal */
#define	PDH_E3TRAN_SDOPT_TAIS	0x02		/* Transmit unipolar 1 */
#define	PDH_E3TRAN_SDOPT_NATUSE	0x01		/* Nat Use bit default value */

/*
 * E3 TRAN Maintenance and Adaptation Options Register (0x6B)
 */
#define	PDH_E3TRAN_MAOPT_FERF	0x80		/* FERF value to insert */
#define	PDH_E3TRAN_MAOPT_FEBE	0x40		/* FEBE value to insert */
#define	PDH_E3TRAN_MAOPT_PT_MSK	0x38		/* Payld type value to insert */
#define	PDH_E3TRAN_MAOPT_TU_MSK	0x06		/* Tribut Unit Multifr bits */
#define	PDH_E3TRAN_MAOPT_TIMEMK	0x01		/* MA byte Timing Marker bit */

/*
 * TTB Control Register (0x6C)
 */
#define	PDH_TTB_CTL_RRAMACC	0x40		/* Read select rx trace buf */
#define	PDH_TTB_CTL_RTIUIE	0x20		/* Recv trace id unst int en */
#define	PDH_TTB_CTL_RTIMIE	0x10		/* Recv trace id mism int en */
#define	PDH_TTB_CTL_PER5	0x08		/* 5 identic msgs required */
#define	PDH_TTB_CTL_TNULL	0x04		/* Insert an all 0 byte */
#define	PDH_TTB_CTL_NOSYNC	0x02		/* Dis sync 2 trail trace msg */

/*
 * TTB Trail Trace Identifier Status Register (0x6D)
 */
#define	PDH_TTB_TTIS_BUSY	0x80		/* Trail trace RAM acc busy */
#define	PDH_TTB_TTIS_RTIUI	0x08		/* Rx trace id stabl stat chg */
#define	PDH_TTB_TTIS_RTIUV	0x04		/* 8 different msgs received */
#define	PDH_TTB_TTIS_RTIMI	0x02		/* Rx trace match status chg */
#define	PDH_TTB_TTIS_RTIMV	0x01		/* Accept msg <> expected */

/*
 * TTB Indirect Address Register (0x6E)
 */
#define	PDH_TTB_IA_RWB		0x80		/* Select indir Read access */
#define	PDH_TTB_IA_AMSK		0x7F		/* Indirect read address mask */

/*
 * TTB Payload Type Label Control/Status Register (0x71)
 */
#define	PDH_TTB_PTLCS_RPLDUIE	0x80		/* Payl type lbl unst int en */
#define	PDH_TTB_PTLCS_RPLDMIE	0x40		/* Payl type lbl mism int en */
#define	PDH_TTB_PTLCS_RPLDUI	0x08		/* Payl type lbl unstabl int */
#define	PDH_TTB_PTLCS_RPLDUV	0x04		/* Payl type lbl unstabl stat */
#define	PDH_TTB_PTLCS_RPLDMI	0x02		/* Payl type lbl mism intr */
#define	PDH_TTB_PTLCS_RPLDMV	0x01		/* Payl type lbl mism status */

/*
 * Sync FIFO Parity Control/Status Register (0x74)
 */
#define	PDH_SFFPCS_REVEN	0x08		/* Rx sync FIFO even parity */
#define	PDH_SFFPCS_TEVEN	0x04		/* Tx sync FIFO even parity */
#define	PDH_SFFPCS_TPERRE	0x02		/* Tx parity error intr en */
#define	PDH_SFFPCS_TPERRI	0x01		/* Tx parity error intr */

/*
 * PLIM Control Register (0x80)
 */
#define	PDH_PCR_INTCLK_RD	0x80		/* Internal clock (R/O) */
#define	PDH_PCR_CLKEN_RD	0x40		/* Clock enable (R/O) */
#define	PDH_PCR_LTH_T3SHORT_RD	0x30		/* T3 Short cable (R/O) */
#define	PDH_PCR_LTH_T3LONG_RD	0x10		/* T3 Long cable (R/O) */
#define	PDH_PCR_LTH_E3_RD	0x00		/* E3 cable (R/O) */
#define	PDH_PCR_LTH_MSK_RD	0x30		/* Cable lth field mask (R/O) */
#define	PDH_PCR_INTCLK_WR	0x08		/* Internal clock (W/O) */
#define	PDH_PCR_CLKEN_WR	0x04		/* Clock enable (W/O) */
#define	PDH_PCR_LTH_T3SHORT_WR	0x03		/* T3 Short cable (W/O) */
#define	PDH_PCR_LTH_T3LONG_WR	0x01		/* T3 Long cable (W/O) */
#define	PDH_PCR_LTH_E3_WR	0x00		/* E3 cable (W/O) */
#define	PDH_PCR_LTH_MSK_WR	0x03		/* Cable lth field mask (W/O) */



/*******************************************************************
			Register Map
 *******************************************************************/

typedef struct suni_pdh_t_ {
    vshort cfgr;		/* Configuration Register */
    vshort ier;			/* Interrupt Enable Register */
    vshort isr;			/* Interrupt Status Register */
    vshort ctlr;		/* Control Register */
    vshort imrr;		/* Identification and Master Reset Register */
    vshort dlcr;		/* Data Link Control Register */
    vshort rboc_cier;		/* RBOC Configuration/Interrupt Enable Reg */
    vshort rboc_isr;		/* RBOC Interrupt Status Register */
    vshort t3frmr_cfgr;		/* DS3 FRMR Configuration Register */
    vshort t3frmr_ier;		/* DS3 FRMR Interrupt Enable Register */
    vshort t3frmr_isr;		/* DS3 FRMR Interrupt Status Register */
    vshort t3frmr_statr;	/* DS3 FRMR Status Register */
    vshort rfdl_cfgr;		/* RFDL Configuration Register */
    vshort rfdl_esr;		/* RFDL Enable/Status Register */
    vshort rfdl_statr;		/* RFDL Status Register */
    vshort rfdl_datar;		/* RFDL Data Register */
    vshort pmon_pmr;		/* PMON Change of PMON Performance Meters Reg */
    vshort pmon_iesr;		/* PMON Interrupt Enable/Status Register */
    vshort pmon_resr[2];	/* PMON Reserved Registers */
    vshort pmon_lcvec0r;	/* PMON Line Code Viol Event Count LSB Reg */
    vshort pmon_lcvec1r;	/* PMON Line Code Viol Event Count MSB Reg */
    vshort pmon_fbeec0r;	/* PMON Framing Bit Error Event Count LSB Reg */
    vshort pmon_fbeec1r;	/* PMON Framing Bit Error Event Count MSB Reg */
    vshort pmon_sezdc0r;	/* PMON Sum Excessive Zero Det Count LSB Reg */
    vshort pmon_sezdc1r;	/* PMON Sum Excessive Zero Det Count MSB Reg */
    vshort pmon_peec0r;		/* PMON Parity Error Event Count LSB Register */
    vshort pmon_peec1r;		/* PMON Parity Error Event Count MSB Register */
    vshort pmon_ppeec0r;	/* PMON Path Parity Error Event Count LSB Reg */
    vshort pmon_ppeec1r;	/* PMON Path Parity Error Event Count MSB Reg */
    vshort pmon_febeec0r;	/* PMON FEBE Event Count LSB Register */
    vshort pmon_febeec1r;	/* PMON FEBE Event Count MSB Register */
    vshort t3tran_cfgr;		/* DS3 TRAN Configuration Register */
    vshort t3tran_diagr;	/* DS3 TRAN Diagnostics Register */
    vshort t3tran_resr[2];	/* DS3 TRAN Reserved Registers */
    vshort xfdl_cfgr;		/* XFDL Configuration Register */
    vshort xfdl_isr;		/* XFDL Interrupt Status Register */
    vshort xfdl_txdatar;	/* XFDL Transmit Data Register */
    vshort xboc_coder;		/* XBOC Code Register */
    vshort splr_cfgr;		/* SPLR Configuration Register */
    vshort splr_ier;		/* SPLR Interrupt Enable Register */
    vshort splr_isr;		/* SPLR Interrupt Status Register */
    vshort splr_statr;		/* SPLR Status Register */
    vshort splt_cfgr;		/* SPLT Configuration Register */
    vshort splt_ctlr;		/* SPLT Control Register */
    vshort splt_diagr;		/* SPLT Diagnostics and G1 Octet Register */
    vshort splt_f1r;		/* SPLT F1 Octet Register */
    vshort cppm_locmr;		/* CPPM Loss of Clock Meters Register */
    vshort cppm_copmr;		/* CPPM Change of CPPM Performance Meters Reg */
    vshort cppm_b1ec0r;		/* CPPM B1 Error Count LSB Register */
    vshort cppm_b1ec1r;		/* CPPM B1 Error Count MSB Register */
    vshort cppm_feec0r;		/* CPPM Framing Error Event Count LSB Reg */
    vshort cppm_feec1r;		/* CPPM Framing Error Event Count MSB Reg */
    vshort cppm_febec0r;	/* CPPM FEBE Count LSB Register */
    vshort cppm_febec1r;	/* CPPM FEBE Count MSB Register */
    vshort cppm_hcsec0r;	/* CPPM HCS Error Count LSB Register */
    vshort cppm_hcsec1r;	/* CPPM HCS Error Count MSB Register */
    vshort cppm_iucc0r;		/* CPPM Idle/Unassigned Cell Count LSB Reg */
    vshort cppm_iucc1r;		/* CPPM Idle/Unassigned Cell Count MSB Reg */
    vshort cppm_rcc0r;		/* CPPM Receive Cell Count LSB Register */
    vshort cppm_rcc1r;		/* CPPM Receive Cell Count MSB Register */
    vshort cppm_tcc0r;		/* CPPM Transmit Cell Count LSB Register */
    vshort cppm_tcc1r;		/* CPPM Transmit Cell Count MSB Register */
    vshort rxcp_ctlr;		/* RXCP Control Register */
    vshort rxcp_frcr;		/* RXCP Framing Control Register */
    vshort rxcp_iesr;		/* RXCP Interrupt Enable/Status Register */
    vshort rxcp_iucph1r;	/* RXCP Idle/Unass Cell Pattern: H1 Octet Reg */
    vshort rxcp_iucph2r;	/* RXCP Idle/Unass Cell Pattern: H2 Octet Reg */
    vshort rxcp_iucph3r;	/* RXCP Idle/Unass Cell Pattern: H3 Octet Reg */
    vshort rxcp_iucph4r;	/* RXCP Idle/Unass Cell Pattern: H4 Octet Reg */
    vshort rxcp_iucmh1r;	/* RXCP Idle/Unass Cell Mask: H1 Octet Reg */
    vshort rxcp_iucmh2r;	/* RXCP Idle/Unass Cell Mask: H2 Octet Reg */
    vshort rxcp_iucmh3r;	/* RXCP Idle/Unass Cell Mask: H3 Octet Reg */
    vshort rxcp_iucmh4r;	/* RXCP Idle/Unass Cell Mask: H4 Octet Reg */
    vshort rxcp_upcph1r;	/* RXCP User-Program Cell Patt: H1 Octet Reg */
    vshort rxcp_upcph2r;	/* RXCP User-Program Cell Patt: H2 Octet Reg */
    vshort rxcp_upcph3r;	/* RXCP User-Program Cell Patt: H3 Octet Reg */
    vshort rxcp_upcph4r;	/* RXCP User-Program Cell Patt: H4 Octet Reg */
    vshort rxcp_upcmh1r;	/* RXCP User-Program Cell Mask: H1 Octet Reg */
    vshort rxcp_upcmh2r;	/* RXCP User-Program Cell Mask: H2 Octet Reg */
    vshort rxcp_upcmh3r;	/* RXCP User-Program Cell Mask: H3 Octet Reg */
    vshort rxcp_upcmh4r;	/* RXCP User-Program Cell Mask: H4 Octet Reg */
    vshort rxcp_hcscsr;		/* RXCP HCS Control/Status Register */
    vshort rxcp_lctctr;		/* RXCP LCD Count Threshold Register */
    vshort rxcp_resr[3];	/* RXCP Reserved Registers */
    vshort txcp_ctlr;		/* TXCP Control Register */
    vshort txcp_iesr;		/* TXCP Interrupt Enable/Status Register */
    vshort txcp_iucph1r;	/* TXCP Idle/Unass Cell Pattern: H1 Octet Reg */
    vshort txcp_iucph2r;	/* TXCP Idle/Unass Cell Pattern: H2 Octet Reg */
    vshort txcp_iucph3r;	/* TXCP Idle/Unass Cell Pattern: H3 Octet Reg */
    vshort txcp_iucph4r;	/* TXCP Idle/Unass Cell Pattern: H4 Octet Reg */
    vshort txcp_iucph5r;	/* TXCP Idle/Unass Cell Pattern: H5 Octet Reg */
    vshort txcp_iucpr;		/* TXCP Idle/Unass Cell Payload Register */
    vshort e3frmr_foptr;	/* E3 FRMR Framing Options Register */
    vshort e3frmr_moptr;	/* E3 FRMR Maintenance Options Register */
    vshort e3frmr_fier;		/* E3 FRMR Interrupt Enable Register */
    vshort e3frmr_fiisr;	/* E3 FRMR Interrupt Indication/Status Reg */
    vshort e3frmr_meier;	/* E3 FRMR Maintenance Event Intr Enable Reg */
    vshort e3frmr_meiir;	/* E3 FRMR Maintenance Event Intr Indic Reg */
    vshort e3frmr_mesr;		/* E3 FRMR Maintenance Event Status Register */
    vshort e3frmr_resr;		/* E3 FRMR Reserved Register */
    vshort e3tran_foptr;	/* E3 TRAN Framing Options Register */
    vshort e3tran_sdoptr;	/* E3 TRAN Status and Diagnostic Options Reg */
    vshort e3tran_bip8emr;	/* E3 TRAN BIP-8 Error Mask Reg */
    vshort e3tran_maoptr;	/* E3 TRAN Maintenance and Adapt Options Reg */
    vshort ttb_ctlr;		/* TTB Control Register */
    vshort ttb_ttisr;		/* TTB Trail Trace Identifier Status Register */
    vshort ttb_iar;		/* TTB Indirect Address Register */
    vshort ttb_idr;		/* TTB Indirect Data Register */
    vshort ttb_eptlr;		/* TTB Expected Payload Type Label Register */
    vshort ttb_ptlcsr;		/* TTB Payload Type Label Control/Status Reg */
    vshort ttb_resr[2];		/* TTB Reserved Registers */
    vshort sffpcsr;		/* Sync FIFO Parity Control/Status Register */
    vshort res1r[11];		/* Reserved Registers */
    vshort pcr;			/* PLIM Control Register */
    vshort res2r[127];		/* Reserved Test Registers */
    vshort res3r[1280];		/* Reserved addresses to pad 3KB PLIM area */
} suni_pdh_t;



/*******************************************************************
                        Function prototypes
 *******************************************************************/
 
extern void atmzr_sunipdh_ds3_init (hwidbtype *idb);
extern void atmzr_sunipdh_e3_init (hwidbtype *idb);
extern void atmzr_sunipdh_ds3_reset (hwidbtype *idb);
extern void atmzr_sunipdh_e3_reset (hwidbtype *idb);
extern void atmzr_sunipdh_show_regs (hwidbtype *idb);
extern void atmzr_sunipdh_ds3_inthand (hwidbtype *idb);
extern void atmzr_sunipdh_e3_inthand (hwidbtype *idb);
 

#endif	__C4000_ATMZR_SUNIPDH_H__

