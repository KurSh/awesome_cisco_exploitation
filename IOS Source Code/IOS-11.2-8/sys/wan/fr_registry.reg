# $Id: fr_registry.reg,v 3.2.62.8 1996/07/10 07:37:39 chifei Exp $
# $Source: /release/112/cvs/Xsys/wan/fr_registry.reg,v $
#------------------------------------------------------------------
# fr_registry.reg - Frame Relay Service Points
#
# April 1995, Jeffrey T. Johnson
#
# Copyright (c) 1996-1997 by cisco Systems, Inc.
# All rights reserved.
#
#------------------------------------------------------------------
# $Log: fr_registry.reg,v $
# Revision 3.2.62.8  1996/07/10  07:37:39  chifei
# CSCdi60658:  Clear counters clears frame relay MIB objects
# Branch: California_branch
#
# Revision 3.2.62.7  1996/05/30  18:36:22  ccpoe
# CSCdi58545:  FR Tunneling pvc was not shown by "show frame-relay pvc"
# command
# Branch: California_branch
#
# Revision 3.2.62.6  1996/05/29  06:34:58  fowler
# CSCdi58766:  Link errors in 11.2 build
# Branch: California_branch
#
# Revision 3.2.62.5  1996/05/24  21:21:29  ccpoe
# CSCdi58460:  map-class frame-relay traffic-shaping features dont work
# on FR SVC
# Branch: California_branch
#
# Revision 3.2.62.4  1996/05/17  21:13:38  ccpoe
# CSCdi57877:  Frame relay traffic shaping breaks modular images
# Branch: California_branch
#
# Revision 3.2.62.3  1996/05/17  12:16:16  ppearce
# Merge IbuMod into Calif
#
# Revision 3.2.48.3  1996/05/14  03:19:08  kpatel
# CSCdi55075:  Cant define dlsw direct encapsulation for more that pvc
#              dls frame-relay does not work over point to point
#              sub-interface (CSCdi55085)
# Branch: IbuMod_Calif_branch
#
# Revision 3.2.48.2  1996/05/06  00:08:15  ppearce
# Sync to IbuMod_Calif_baseline_960504
#
# Revision 3.2.62.2  1996/05/15  05:54:38  fowler
# Frame relay VC queuing and rate enforcement
# Branch: California_branch
#
# Revision 3.2.62.1  1996/04/25  23:23:30  ronnie
# CSCdi55766:  Hey!  This ATM and Frame Relay is no different than in 11.1
# Feature commit for ATM and Frame Relay into 11.2
# Branch: California_branch
#
# Revision 3.2.66.1  1996/04/24  04:11:24  shankar
# Branch: ATM_Cal_branch
# Patch FR_SVC_branch changes
#
# Revision 3.2  1995/11/17  18:02:17  hampton
# Remove old entries from the RCS header logs.
#
# Revision 3.1  1995/11/09  13:49:04  shaker
# Bump version numbers from 2.x to 3.x.
#
# Revision 2.2  1995/08/30  16:22:01  richl
# CSCdi39553:  Modularity: FR regcode global breaks modular-dlsw
#
# Revision 2.1  1995/06/07  23:17:44  hampton
# Bump version numbers from 1.x to 2.x.
#
#------------------------------------------------------------------
# $Endlog$

#
# Syntax for defining a registry
#
# Each item must begin a line of its own.
# Lines may be continued by ending with a \
#
# BEGIN REGISTRY <name of registry>
#
# DEFINE <name of service point>
# /* <comment lines in standard C format describing the
#     registry. These will be reformatted unless they are
#     in the comment bar format> */
# DATA
#    <Lines of text to be copied from the input to the
#     between the comment and the function declaration>
# END DATA
#    <type of service> := LIST | LOOP | STUB | CASE | RETVAL | VALUE
#    <type declaration of value returned by called function>
#              must be void for LIST and CASE, boolean
#              for LOOP, and ulong for VALUE.
#    <prototype list for called function>
#    <number of cases for case service>
#    <type for case statement>
# END
#
# END REGISTRY
#
#

BEGIN REGISTRY FRAME_RELAY 

DEFINE  frDLCIStatusChange
/*
 * This service should be called when the state of a DLCI changes
 */
	LIST
	void
	fr_pvc_info_type *fr_pvc
END

DEFINE fr_addr_lookup
/* 
 * Registry for the SVC susbstem to look to see 
 * whether a SVC map already exists. 
 */
	STUB
	frmaptype *
	idbtype *idb, addrtype *addr, uint link
END

DEFINE  fr_addr_enter
/*
 * This routine will create a VC and add it to the queue.
 * Registered so that the SVC subsystem can call it.
 */
      STUB
      frmaptype *
      idbtype *idb, addrtype *proto_addr, ushort dlci, boolean broadcast, \
      enum FR_ENCAPS_FORM encaps_ietf, enum MAP_TYPE maptype, \
      enum PVC_TYPE pvctype, uint link, uint options, mapclass_type *mapclass
END

DEFINE        fr_addr_remove
/*
 * This routine is used to remove VCs upon receiving call termination
 * messages from the network.
 */
      STUB
      void
      frmaptype *frmap
END

DEFINE	fr_p2p_intf_dlci
/* 
 * Add a SVC to a point-to-point subinterface
 */
	STUB
	boolean
	idbtype *idb, ushort dlci, boolean broadcast,  \
	enum FR_ENCAPS_FORM fr_encaps_type, uint linktype, \
	mapclass_type *mapclass, addrtype addr
END

DEFINE	fr_p2p_intf_dlci_remove
/* 
 * Routine to remove an SVC from a point-to-point subinterface
 */
	STUB
	void
	idbtype *idb, ushort dlci
END


DEFINE fr_proc_create
/*
 * Call to create frame_relay processes
 */

	LIST
	void
	-
END

DEFINE fr_idb_init
/*
 * Call to initialize idb when frame relay encaps is configured.
 */

	LIST
	void
	hwidbtype *hwidb
END

DEFINE fr_idb_uninit
/*
 * Call to uninitialize idb when frame relay encaps is configured
 */

	LIST
	void
	hwidbtype *hwidb
END

DEFINE fr_mgd_timer_interval
/*
 * Call to set the timer expiration intervals.
 */
	
	CASE
	void
	hwidbtype *hwidb, ulong *interval, ulong subtype
	MAX_FR_MGD_TIMER_COUNT
	ulong timer_type
END


DEFINE fr_mgd_timer_onoff
/*
 * Call to start frame_relay managed timer
 */
	LIST
	void
	hwidbtype *hwidb, boolean ON_OFF
END


DEFINE fr_arp_send
/*
 * Call to send FR_CISCO_ARP
 */
	STUB
	void
	idbtype *idb, addrtype *proto_addr, uint protocol, paktype *pak
END

DEFINE fr_inarp_send
/*
 * Call to send FR_INARP
 */
	STUB
	void
	hwidbtype *hwidb
END
	
DEFINE fr_inarp_dlci
/*
 * Call to get or set the status of inverse ARP per DLCI
 */
	CASE
	void
	fr_idb_struct_type *fr_idb, ushort dlci, ushort *status
	FR_INARP_DLCI_GETORSET
	ushort get_or_set
	
END

	
DEFINE fr_arp_int
/*
 * Call to set the ARP or inverse ARP status on a swidb
 */
	CASE
	void
	idbtype *swidb, ulong arp_type, boolean *status
	FR_ARP_INT_GETORSET
	ulong get_or_set
END


DEFINE fr_show_route
/*
 * Show frame relay route
 */
	LIST
	void
	-
END
	
DEFINE fr_show_pvc
/*
 * Show pvc status
 */
	LIST
	void
	hwidbtype * hwidb, ushort dlci

END

DEFINE fr_tunnel_pvc
/*
 * Create tunnel PVC by giving an in pvc
 * Delete 
 * Locate
 */
	STUB
	void
        fr_pvc_info_type *in_pvc, fr_pvc_info_type **out_pvc, ushort sub_command
END

DEFINE fr_show_tunnel_pvc_stats
/*
 * Show tunnel pvc stats
 */
	STUB
	void
	hwidbtype *hwidb, ushort dlci
END

DEFINE fr_mapclass_nvgen
/*
 * Call to nvgen all the frame relay mapclass
 */

	LIST
	void
	mapclass_type *class_ptr
END


DEFINE fr_dlci_class
/*
 * Call to nvgen all the frame relay mapclass
 */

	LIST
	void
	mapclass_type *class_ptr, fr_pvc_info_type *pvc
END

DEFINE fr_dlci_class_inht
/*
 * Add, change and remove a class on a dlci
 */
	STUB
	void
	idbtype *swidb, ushort dlci, mapclass_type *classp, int class_cmd, uchar vc_inht
	
END

DEFINE fr_idb_class_alloc 
/*
 * alloc idb class
 */
	STUB
	void
	idbtype *swidb
END

DEFINE fr_interface_display
/*
 * Call to optional parts of show interface
 */
	LIST
	void
	fr_idb_struct_type *fr_idb, dialerdbtype *ddb
END
	

DEFINE fr_mapclass_remove
/*
 * remove mapclass
 */
	LIST
	void
	mapclass_type *class_ptr
END

DEFINE fr_mapclass_parse
/*
 * parse a mapclass
 */
	LIST
	void
	parseinfo *csb
END

DEFINE fr_mib_save_stats
/*
 * Save up pvc statistics at clear counters command
 */
	STUB
	void
	fr_pvc_info_type *pvc
END

DEFINE fr_find_mapclass
/*
 * find the mapclass that associated with the given dlci
 */
	STUB
	uchar
	fr_pvc_info_type *pvc, mapclass_type **classp
END

DEFINE  fr_dlci_create
/*
 * This service announces the creation of a DLCI
 */
	LIST
	void
	idbtype *idb,fr_pvc_info_type *fr_pvc, enum FR_SHAPE_CONF sense
END

DEFINE  fr_dlci_destroy
/*
 * This service announces the deletion of a DLCI
 */
	LIST
	void
	idbtype *idb,fr_pvc_info_type *fr_pvc,enum FR_SHAPE_CONF sense
END

END REGISTRY FRAME_RELAY
